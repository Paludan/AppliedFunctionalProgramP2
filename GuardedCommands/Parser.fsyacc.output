        Output file describing compiled parser placed in C:\Users\Thomas\Documents\GitHub\AppliedFunctionalProgramP2\GuardedCommands\Parser.fs and C:\Users\Thomas\Documents\GitHub\AppliedFunctionalProgramP2\GuardedCommands\Parser.fsi
------------------------
states = 
state 0:  items:    _startMain ->  . Main
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   shift 6
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Main: 1
    goto Prog: 4
state 1:  items:    _startMain -> Main . 
  actions:    action 'HIGH' (noprec):   accept
    action 'EOF' (noprec):   accept
    action 'PRINT' (noprec):   accept
    action 'ASG' (noprec):   accept
    action 'SKIP' (noprec):   accept
    action 'ABORT' (noprec):   accept
    action 'FUNC' (noprec):   accept
    action 'PROC' (noprec):   accept
    action 'NEG' (noprec):   accept
    action 'PLUS' (noprec):   accept
    action 'MINUS' (noprec):   accept
    action 'TIMES' (noprec):   accept
    action 'AND' (noprec):   accept
    action 'EQ' (noprec):   accept
    action 'LE' (noprec):   accept
    action 'LT' (noprec):   accept
    action 'GT' (noprec):   accept
    action 'NEQ' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'SEMI' (noprec):   accept
    action 'BAR' (noprec):   accept
    action 'TO' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'FI' (noprec):   accept
    action 'DO' (noprec):   accept
    action 'OD' (noprec):   accept
    action 'BEGIN' (noprec):   accept
    action 'END' (noprec):   accept
    action 'RET' (noprec):   accept
    action 'LP' (noprec):   accept
    action 'LCP' (noprec):   accept
    action 'LSP' (noprec):   accept
    action 'RP' (noprec):   accept
    action 'RCP' (noprec):   accept
    action 'RSP' (noprec):   accept
    action 'ITYP' (noprec):   accept
    action 'BTYP' (noprec):   accept
    action 'FTYP' (noprec):   accept
    action 'NAME' (noprec):   accept
    action 'STRING' (noprec):   accept
    action 'BOOL' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action:   accept  gotos:state 2:  items:    _startProg ->  . Prog
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   shift 6
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Prog: 3
state 3:  items:    _startProg -> Prog . 
  actions:    action 'HIGH' (noprec):   accept
    action 'EOF' (noprec):   accept
    action 'PRINT' (noprec):   accept
    action 'ASG' (noprec):   accept
    action 'SKIP' (noprec):   accept
    action 'ABORT' (noprec):   accept
    action 'FUNC' (noprec):   accept
    action 'PROC' (noprec):   accept
    action 'NEG' (noprec):   accept
    action 'PLUS' (noprec):   accept
    action 'MINUS' (noprec):   accept
    action 'TIMES' (noprec):   accept
    action 'AND' (noprec):   accept
    action 'EQ' (noprec):   accept
    action 'LE' (noprec):   accept
    action 'LT' (noprec):   accept
    action 'GT' (noprec):   accept
    action 'NEQ' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'SEMI' (noprec):   accept
    action 'BAR' (noprec):   accept
    action 'TO' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'FI' (noprec):   accept
    action 'DO' (noprec):   accept
    action 'OD' (noprec):   accept
    action 'BEGIN' (noprec):   accept
    action 'END' (noprec):   accept
    action 'RET' (noprec):   accept
    action 'LP' (noprec):   accept
    action 'LCP' (noprec):   accept
    action 'LSP' (noprec):   accept
    action 'RP' (noprec):   accept
    action 'RCP' (noprec):   accept
    action 'RSP' (noprec):   accept
    action 'ITYP' (noprec):   accept
    action 'BTYP' (noprec):   accept
    action 'FTYP' (noprec):   accept
    action 'NAME' (noprec):   accept
    action 'STRING' (noprec):   accept
    action 'BOOL' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action:   accept  gotos:state 4:  items:    Main -> Prog . 'EOF'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   shift 5
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 5:  items:    Main -> Prog 'EOF' . 
  actions:    action 'HIGH' (noprec):   reduce Main --> Prog 'EOF'
    action 'EOF' (noprec):   reduce Main --> Prog 'EOF'
    action 'PRINT' (noprec):   reduce Main --> Prog 'EOF'
    action 'ASG' (noprec):   reduce Main --> Prog 'EOF'
    action 'SKIP' (noprec):   reduce Main --> Prog 'EOF'
    action 'ABORT' (noprec):   reduce Main --> Prog 'EOF'
    action 'FUNC' (noprec):   reduce Main --> Prog 'EOF'
    action 'PROC' (noprec):   reduce Main --> Prog 'EOF'
    action 'NEG' (noprec):   reduce Main --> Prog 'EOF'
    action 'PLUS' (noprec):   reduce Main --> Prog 'EOF'
    action 'MINUS' (noprec):   reduce Main --> Prog 'EOF'
    action 'TIMES' (noprec):   reduce Main --> Prog 'EOF'
    action 'AND' (noprec):   reduce Main --> Prog 'EOF'
    action 'EQ' (noprec):   reduce Main --> Prog 'EOF'
    action 'LE' (noprec):   reduce Main --> Prog 'EOF'
    action 'LT' (noprec):   reduce Main --> Prog 'EOF'
    action 'GT' (noprec):   reduce Main --> Prog 'EOF'
    action 'NEQ' (noprec):   reduce Main --> Prog 'EOF'
    action 'COMMA' (noprec):   reduce Main --> Prog 'EOF'
    action 'COLON' (noprec):   reduce Main --> Prog 'EOF'
    action 'SEMI' (noprec):   reduce Main --> Prog 'EOF'
    action 'BAR' (noprec):   reduce Main --> Prog 'EOF'
    action 'TO' (noprec):   reduce Main --> Prog 'EOF'
    action 'IF' (noprec):   reduce Main --> Prog 'EOF'
    action 'FI' (noprec):   reduce Main --> Prog 'EOF'
    action 'DO' (noprec):   reduce Main --> Prog 'EOF'
    action 'OD' (noprec):   reduce Main --> Prog 'EOF'
    action 'BEGIN' (noprec):   reduce Main --> Prog 'EOF'
    action 'END' (noprec):   reduce Main --> Prog 'EOF'
    action 'RET' (noprec):   reduce Main --> Prog 'EOF'
    action 'LP' (noprec):   reduce Main --> Prog 'EOF'
    action 'LCP' (noprec):   reduce Main --> Prog 'EOF'
    action 'LSP' (noprec):   reduce Main --> Prog 'EOF'
    action 'RP' (noprec):   reduce Main --> Prog 'EOF'
    action 'RCP' (noprec):   reduce Main --> Prog 'EOF'
    action 'RSP' (noprec):   reduce Main --> Prog 'EOF'
    action 'ITYP' (noprec):   reduce Main --> Prog 'EOF'
    action 'BTYP' (noprec):   reduce Main --> Prog 'EOF'
    action 'FTYP' (noprec):   reduce Main --> Prog 'EOF'
    action 'NAME' (noprec):   reduce Main --> Prog 'EOF'
    action 'STRING' (noprec):   reduce Main --> Prog 'EOF'
    action 'BOOL' (noprec):   reduce Main --> Prog 'EOF'
    action 'INT' (noprec):   reduce Main --> Prog 'EOF'
    action 'error' (noprec):   reduce Main --> Prog 'EOF'
    action '#' (noprec):   reduce Main --> Prog 'EOF'
    action '$$' (noprec):   reduce Main --> Prog 'EOF'
  immediate action:   reduce Main --> Prog 'EOF'  gotos:state 6:  items:    Prog -> 'BEGIN' . DecList 'SEMI' StmL 'END'
    Prog -> 'BEGIN' . StmL 'END'
  actions:    action 'HIGH' (noprec):   reduce StmL --> 
    action 'EOF' (noprec):   reduce StmL --> 
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   reduce StmL --> 
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   shift 31
    action 'PROC' (noprec):   shift 40
    action 'NEG' (noprec):   reduce StmL --> 
    action 'PLUS' (noprec):   reduce StmL --> 
    action 'MINUS' (noprec):   reduce StmL --> 
    action 'TIMES' (noprec):   reduce StmL --> 
    action 'AND' (noprec):   reduce StmL --> 
    action 'EQ' (noprec):   reduce StmL --> 
    action 'LE' (noprec):   reduce StmL --> 
    action 'LT' (noprec):   reduce StmL --> 
    action 'GT' (noprec):   reduce StmL --> 
    action 'NEQ' (noprec):   reduce StmL --> 
    action 'COMMA' (noprec):   reduce StmL --> 
    action 'COLON' (noprec):   reduce StmL --> 
    action 'SEMI' (noprec):   reduce StmL --> 
    action 'BAR' (noprec):   reduce StmL --> 
    action 'TO' (noprec):   reduce StmL --> 
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   reduce StmL --> 
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   reduce StmL --> 
    action 'BEGIN' (noprec):   reduce StmL --> 
    action 'END' (noprec):   reduce StmL --> 
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   reduce StmL --> 
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   reduce StmL --> 
    action 'RP' (noprec):   reduce StmL --> 
    action 'RCP' (noprec):   reduce StmL --> 
    action 'RSP' (noprec):   reduce StmL --> 
    action 'ITYP' (noprec):   reduce StmL --> 
    action 'BTYP' (noprec):   reduce StmL --> 
    action 'FTYP' (noprec):   reduce StmL --> 
    action 'NAME' (noprec):   shift 19
    action 'STRING' (noprec):   reduce StmL --> 
    action 'BOOL' (noprec):   reduce StmL --> 
    action 'INT' (noprec):   reduce StmL --> 
    action 'error' (noprec):   reduce StmL --> 
    action '#' (noprec):   reduce StmL --> 
    action '$$' (noprec):   reduce StmL --> 
  immediate action: <none>  gotos:    goto Var: 30
    goto Dec: 50
    goto ArrayDec: 47
    goto DecList: 7
    goto Access: 60
    goto Stm: 89
    goto StmL: 11
    goto StmList: 88
state 7:  items:    Prog -> 'BEGIN' DecList . 'SEMI' StmL 'END'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   shift 8
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 8:  items:    Prog -> 'BEGIN' DecList 'SEMI' . StmL 'END'
  actions:    action 'HIGH' (noprec):   reduce StmL --> 
    action 'EOF' (noprec):   reduce StmL --> 
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   reduce StmL --> 
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   reduce StmL --> 
    action 'PROC' (noprec):   reduce StmL --> 
    action 'NEG' (noprec):   reduce StmL --> 
    action 'PLUS' (noprec):   reduce StmL --> 
    action 'MINUS' (noprec):   reduce StmL --> 
    action 'TIMES' (noprec):   reduce StmL --> 
    action 'AND' (noprec):   reduce StmL --> 
    action 'EQ' (noprec):   reduce StmL --> 
    action 'LE' (noprec):   reduce StmL --> 
    action 'LT' (noprec):   reduce StmL --> 
    action 'GT' (noprec):   reduce StmL --> 
    action 'NEQ' (noprec):   reduce StmL --> 
    action 'COMMA' (noprec):   reduce StmL --> 
    action 'COLON' (noprec):   reduce StmL --> 
    action 'SEMI' (noprec):   reduce StmL --> 
    action 'BAR' (noprec):   reduce StmL --> 
    action 'TO' (noprec):   reduce StmL --> 
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   reduce StmL --> 
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   reduce StmL --> 
    action 'BEGIN' (noprec):   reduce StmL --> 
    action 'END' (noprec):   reduce StmL --> 
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   reduce StmL --> 
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   reduce StmL --> 
    action 'RP' (noprec):   reduce StmL --> 
    action 'RCP' (noprec):   reduce StmL --> 
    action 'RSP' (noprec):   reduce StmL --> 
    action 'ITYP' (noprec):   reduce StmL --> 
    action 'BTYP' (noprec):   reduce StmL --> 
    action 'FTYP' (noprec):   reduce StmL --> 
    action 'NAME' (noprec):   shift 53
    action 'STRING' (noprec):   reduce StmL --> 
    action 'BOOL' (noprec):   reduce StmL --> 
    action 'INT' (noprec):   reduce StmL --> 
    action 'error' (noprec):   reduce StmL --> 
    action '#' (noprec):   reduce StmL --> 
    action '$$' (noprec):   reduce StmL --> 
  immediate action: <none>  gotos:    goto Access: 60
    goto Stm: 89
    goto StmL: 9
    goto StmList: 88
state 9:  items:    Prog -> 'BEGIN' DecList 'SEMI' StmL . 'END'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 10
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 10:  items:    Prog -> 'BEGIN' DecList 'SEMI' StmL 'END' . 
  actions:    action 'HIGH' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'EOF' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'PRINT' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'ASG' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'SKIP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'ABORT' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'FUNC' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'PROC' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'NEG' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'PLUS' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'MINUS' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'TIMES' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'AND' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'EQ' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'LE' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'LT' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'GT' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'NEQ' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'COMMA' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'COLON' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'SEMI' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'BAR' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'TO' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'IF' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'FI' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'DO' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'OD' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'BEGIN' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'END' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'RET' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'LP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'LCP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'LSP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'RP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'RCP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'RSP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'ITYP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'BTYP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'FTYP' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'NAME' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'STRING' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'BOOL' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'INT' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action 'error' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action '#' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
    action '$$' (noprec):   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'
  immediate action:   reduce Prog --> 'BEGIN' DecList 'SEMI' StmL 'END'  gotos:state 11:  items:    Prog -> 'BEGIN' StmL . 'END'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   shift 12
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 12:  items:    Prog -> 'BEGIN' StmL 'END' . 
  actions:    action 'HIGH' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'EOF' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'PRINT' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'ASG' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'SKIP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'ABORT' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'FUNC' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'PROC' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'NEG' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'PLUS' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'MINUS' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'TIMES' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'AND' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'EQ' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'LE' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'LT' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'GT' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'NEQ' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'COMMA' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'COLON' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'SEMI' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'BAR' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'TO' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'IF' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'FI' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'DO' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'OD' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'BEGIN' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'END' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'RET' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'LP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'LCP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'LSP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'RP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'RCP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'RSP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'ITYP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'BTYP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'FTYP' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'NAME' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'STRING' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'BOOL' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'INT' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action 'error' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action '#' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
    action '$$' (noprec):   reduce Prog --> 'BEGIN' StmL 'END'
  immediate action:   reduce Prog --> 'BEGIN' StmL 'END'  gotos:state 13:  items:    BasicTyp -> 'BTYP' . 
  actions:    action 'HIGH' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'EOF' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'PRINT' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'ASG' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'SKIP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'ABORT' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'FUNC' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'PROC' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'NEG' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'PLUS' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'MINUS' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'TIMES' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'AND' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'EQ' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'LE' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'LT' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'GT' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'NEQ' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'COMMA' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'COLON' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'SEMI' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'BAR' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'TO' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'IF' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'FI' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'DO' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'OD' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'BEGIN' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'END' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'RET' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'LP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'LCP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'LSP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'RP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'RCP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'RSP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'ITYP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'BTYP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'FTYP' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'NAME' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'STRING' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'BOOL' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'INT' (noprec):   reduce BasicTyp --> 'BTYP'
    action 'error' (noprec):   reduce BasicTyp --> 'BTYP'
    action '#' (noprec):   reduce BasicTyp --> 'BTYP'
    action '$$' (noprec):   reduce BasicTyp --> 'BTYP'
  immediate action:   reduce BasicTyp --> 'BTYP'  gotos:state 14:  items:    BasicTyp -> 'ITYP' . 
  actions:    action 'HIGH' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'EOF' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'PRINT' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'ASG' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'SKIP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'ABORT' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'FUNC' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'PROC' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'NEG' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'PLUS' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'MINUS' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'TIMES' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'AND' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'EQ' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'LE' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'LT' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'GT' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'NEQ' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'COMMA' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'COLON' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'SEMI' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'BAR' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'TO' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'IF' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'FI' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'DO' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'OD' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'BEGIN' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'END' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'RET' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'LP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'LCP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'LSP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'RP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'RCP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'RSP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'ITYP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'BTYP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'FTYP' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'NAME' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'STRING' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'BOOL' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'INT' (noprec):   reduce BasicTyp --> 'ITYP'
    action 'error' (noprec):   reduce BasicTyp --> 'ITYP'
    action '#' (noprec):   reduce BasicTyp --> 'ITYP'
    action '$$' (noprec):   reduce BasicTyp --> 'ITYP'
  immediate action:   reduce BasicTyp --> 'ITYP'  gotos:state 15:  items:    Typ -> BasicTyp . 
    Var -> 'NAME' 'COLON' BasicTyp . 'LSP' 'RSP'
  actions:    action 'HIGH' (noprec):   reduce Typ --> BasicTyp
    action 'EOF' (noprec):   reduce Typ --> BasicTyp
    action 'PRINT' (noprec):   reduce Typ --> BasicTyp
    action 'ASG' (noprec):   reduce Typ --> BasicTyp
    action 'SKIP' (noprec):   reduce Typ --> BasicTyp
    action 'ABORT' (noprec):   reduce Typ --> BasicTyp
    action 'FUNC' (noprec):   reduce Typ --> BasicTyp
    action 'PROC' (noprec):   reduce Typ --> BasicTyp
    action 'NEG' (noprec):   reduce Typ --> BasicTyp
    action 'PLUS' (noprec):   reduce Typ --> BasicTyp
    action 'MINUS' (noprec):   reduce Typ --> BasicTyp
    action 'TIMES' (noprec):   reduce Typ --> BasicTyp
    action 'AND' (noprec):   reduce Typ --> BasicTyp
    action 'EQ' (noprec):   reduce Typ --> BasicTyp
    action 'LE' (noprec):   reduce Typ --> BasicTyp
    action 'LT' (noprec):   reduce Typ --> BasicTyp
    action 'GT' (noprec):   reduce Typ --> BasicTyp
    action 'NEQ' (noprec):   reduce Typ --> BasicTyp
    action 'COMMA' (noprec):   reduce Typ --> BasicTyp
    action 'COLON' (noprec):   reduce Typ --> BasicTyp
    action 'SEMI' (noprec):   reduce Typ --> BasicTyp
    action 'BAR' (noprec):   reduce Typ --> BasicTyp
    action 'TO' (noprec):   reduce Typ --> BasicTyp
    action 'IF' (noprec):   reduce Typ --> BasicTyp
    action 'FI' (noprec):   reduce Typ --> BasicTyp
    action 'DO' (noprec):   reduce Typ --> BasicTyp
    action 'OD' (noprec):   reduce Typ --> BasicTyp
    action 'BEGIN' (noprec):   reduce Typ --> BasicTyp
    action 'END' (noprec):   reduce Typ --> BasicTyp
    action 'RET' (noprec):   reduce Typ --> BasicTyp
    action 'LP' (noprec):   reduce Typ --> BasicTyp
    action 'LCP' (noprec):   reduce Typ --> BasicTyp
    action 'LSP' (noprec):   shift 23
    action 'RP' (noprec):   reduce Typ --> BasicTyp
    action 'RCP' (noprec):   reduce Typ --> BasicTyp
    action 'RSP' (noprec):   reduce Typ --> BasicTyp
    action 'ITYP' (noprec):   reduce Typ --> BasicTyp
    action 'BTYP' (noprec):   reduce Typ --> BasicTyp
    action 'FTYP' (noprec):   reduce Typ --> BasicTyp
    action 'NAME' (noprec):   reduce Typ --> BasicTyp
    action 'STRING' (noprec):   reduce Typ --> BasicTyp
    action 'BOOL' (noprec):   reduce Typ --> BasicTyp
    action 'INT' (noprec):   reduce Typ --> BasicTyp
    action 'error' (noprec):   reduce Typ --> BasicTyp
    action '#' (noprec):   reduce Typ --> BasicTyp
    action '$$' (noprec):   reduce Typ --> BasicTyp
  immediate action: <none>  gotos:state 16:  items:    Typ -> BasicTyp . 
    Var -> 'NAME' 'COLON' BasicTyp . 'LSP' 'RSP'
    ArrayDec -> 'NAME' 'COLON' BasicTyp . 'LSP' 'INT' 'RSP'
  actions:    action 'HIGH' (noprec):   reduce Typ --> BasicTyp
    action 'EOF' (noprec):   reduce Typ --> BasicTyp
    action 'PRINT' (noprec):   reduce Typ --> BasicTyp
    action 'ASG' (noprec):   reduce Typ --> BasicTyp
    action 'SKIP' (noprec):   reduce Typ --> BasicTyp
    action 'ABORT' (noprec):   reduce Typ --> BasicTyp
    action 'FUNC' (noprec):   reduce Typ --> BasicTyp
    action 'PROC' (noprec):   reduce Typ --> BasicTyp
    action 'NEG' (noprec):   reduce Typ --> BasicTyp
    action 'PLUS' (noprec):   reduce Typ --> BasicTyp
    action 'MINUS' (noprec):   reduce Typ --> BasicTyp
    action 'TIMES' (noprec):   reduce Typ --> BasicTyp
    action 'AND' (noprec):   reduce Typ --> BasicTyp
    action 'EQ' (noprec):   reduce Typ --> BasicTyp
    action 'LE' (noprec):   reduce Typ --> BasicTyp
    action 'LT' (noprec):   reduce Typ --> BasicTyp
    action 'GT' (noprec):   reduce Typ --> BasicTyp
    action 'NEQ' (noprec):   reduce Typ --> BasicTyp
    action 'COMMA' (noprec):   reduce Typ --> BasicTyp
    action 'COLON' (noprec):   reduce Typ --> BasicTyp
    action 'SEMI' (noprec):   reduce Typ --> BasicTyp
    action 'BAR' (noprec):   reduce Typ --> BasicTyp
    action 'TO' (noprec):   reduce Typ --> BasicTyp
    action 'IF' (noprec):   reduce Typ --> BasicTyp
    action 'FI' (noprec):   reduce Typ --> BasicTyp
    action 'DO' (noprec):   reduce Typ --> BasicTyp
    action 'OD' (noprec):   reduce Typ --> BasicTyp
    action 'BEGIN' (noprec):   reduce Typ --> BasicTyp
    action 'END' (noprec):   reduce Typ --> BasicTyp
    action 'RET' (noprec):   reduce Typ --> BasicTyp
    action 'LP' (noprec):   reduce Typ --> BasicTyp
    action 'LCP' (noprec):   reduce Typ --> BasicTyp
    action 'LSP' (noprec):   shift 24
    action 'RP' (noprec):   reduce Typ --> BasicTyp
    action 'RCP' (noprec):   reduce Typ --> BasicTyp
    action 'RSP' (noprec):   reduce Typ --> BasicTyp
    action 'ITYP' (noprec):   reduce Typ --> BasicTyp
    action 'BTYP' (noprec):   reduce Typ --> BasicTyp
    action 'FTYP' (noprec):   reduce Typ --> BasicTyp
    action 'NAME' (noprec):   reduce Typ --> BasicTyp
    action 'STRING' (noprec):   reduce Typ --> BasicTyp
    action 'BOOL' (noprec):   reduce Typ --> BasicTyp
    action 'INT' (noprec):   reduce Typ --> BasicTyp
    action 'error' (noprec):   reduce Typ --> BasicTyp
    action '#' (noprec):   reduce Typ --> BasicTyp
    action '$$' (noprec):   reduce Typ --> BasicTyp
  immediate action: <none>  gotos:state 17:  items:    Var -> 'NAME' . 'COLON' Typ
    Var -> 'NAME' . 'COLON' BasicTyp 'LSP' 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 20
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 18:  items:    Var -> 'NAME' . 'COLON' Typ
    Var -> 'NAME' . 'COLON' BasicTyp 'LSP' 'RSP'
    ArrayDec -> 'NAME' . 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 21
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 19:  items:    Var -> 'NAME' . 'COLON' Typ
    Var -> 'NAME' . 'COLON' BasicTyp 'LSP' 'RSP'
    ArrayDec -> 'NAME' . 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    Access -> 'NAME' . 
    Access -> 'NAME' . 'LSP' Exp 'RSP'
    Stm -> 'NAME' . 'LP' ExpL 'RP'
  actions:    action 'HIGH' (noprec):   reduce Access --> 'NAME'
    action 'EOF' (noprec):   reduce Access --> 'NAME'
    action 'PRINT' (noprec):   reduce Access --> 'NAME'
    action 'ASG' (noprec):   reduce Access --> 'NAME'
    action 'SKIP' (noprec):   reduce Access --> 'NAME'
    action 'ABORT' (noprec):   reduce Access --> 'NAME'
    action 'FUNC' (noprec):   reduce Access --> 'NAME'
    action 'PROC' (noprec):   reduce Access --> 'NAME'
    action 'NEG' (noprec):   reduce Access --> 'NAME'
    action 'PLUS' (noprec):   reduce Access --> 'NAME'
    action 'MINUS' (noprec):   reduce Access --> 'NAME'
    action 'TIMES' (noprec):   reduce Access --> 'NAME'
    action 'AND' (noprec):   reduce Access --> 'NAME'
    action 'EQ' (noprec):   reduce Access --> 'NAME'
    action 'LE' (noprec):   reduce Access --> 'NAME'
    action 'LT' (noprec):   reduce Access --> 'NAME'
    action 'GT' (noprec):   reduce Access --> 'NAME'
    action 'NEQ' (noprec):   reduce Access --> 'NAME'
    action 'COMMA' (noprec):   reduce Access --> 'NAME'
    action 'COLON' (noprec):   shift 21
    action 'SEMI' (noprec):   reduce Access --> 'NAME'
    action 'BAR' (noprec):   reduce Access --> 'NAME'
    action 'TO' (noprec):   reduce Access --> 'NAME'
    action 'IF' (noprec):   reduce Access --> 'NAME'
    action 'FI' (noprec):   reduce Access --> 'NAME'
    action 'DO' (noprec):   reduce Access --> 'NAME'
    action 'OD' (noprec):   reduce Access --> 'NAME'
    action 'BEGIN' (noprec):   reduce Access --> 'NAME'
    action 'END' (noprec):   reduce Access --> 'NAME'
    action 'RET' (noprec):   reduce Access --> 'NAME'
    action 'LP' (noprec):   shift 80
    action 'LCP' (noprec):   reduce Access --> 'NAME'
    action 'LSP' (noprec):   shift 55
    action 'RP' (noprec):   reduce Access --> 'NAME'
    action 'RCP' (noprec):   reduce Access --> 'NAME'
    action 'RSP' (noprec):   reduce Access --> 'NAME'
    action 'ITYP' (noprec):   reduce Access --> 'NAME'
    action 'BTYP' (noprec):   reduce Access --> 'NAME'
    action 'FTYP' (noprec):   reduce Access --> 'NAME'
    action 'NAME' (noprec):   reduce Access --> 'NAME'
    action 'STRING' (noprec):   reduce Access --> 'NAME'
    action 'BOOL' (noprec):   reduce Access --> 'NAME'
    action 'INT' (noprec):   reduce Access --> 'NAME'
    action 'error' (noprec):   reduce Access --> 'NAME'
    action '#' (noprec):   reduce Access --> 'NAME'
    action '$$' (noprec):   reduce Access --> 'NAME'
  immediate action: <none>  gotos:state 20:  items:    Var -> 'NAME' 'COLON' . Typ
    Var -> 'NAME' 'COLON' . BasicTyp 'LSP' 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   shift 14
    action 'BTYP' (noprec):   shift 13
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto BasicTyp: 15
    goto Typ: 22
state 21:  items:    Var -> 'NAME' 'COLON' . Typ
    Var -> 'NAME' 'COLON' . BasicTyp 'LSP' 'RSP'
    ArrayDec -> 'NAME' 'COLON' . BasicTyp 'LSP' 'INT' 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   shift 14
    action 'BTYP' (noprec):   shift 13
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto BasicTyp: 16
    goto Typ: 22
state 22:  items:    Var -> 'NAME' 'COLON' Typ . 
  actions:    action 'HIGH' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'EOF' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'PRINT' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'ASG' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'SKIP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'ABORT' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'FUNC' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'PROC' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'NEG' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'PLUS' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'MINUS' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'TIMES' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'AND' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'EQ' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'LE' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'LT' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'GT' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'NEQ' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'COMMA' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'COLON' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'SEMI' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'BAR' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'TO' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'IF' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'FI' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'DO' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'OD' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'BEGIN' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'END' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'RET' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'LP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'LCP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'LSP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'RP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'RCP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'RSP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'ITYP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'BTYP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'FTYP' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'NAME' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'STRING' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'BOOL' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'INT' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action 'error' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action '#' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
    action '$$' (noprec):   reduce Var --> 'NAME' 'COLON' Typ
  immediate action:   reduce Var --> 'NAME' 'COLON' Typ  gotos:state 23:  items:    Var -> 'NAME' 'COLON' BasicTyp 'LSP' . 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   shift 25
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 24:  items:    Var -> 'NAME' 'COLON' BasicTyp 'LSP' . 'RSP'
    ArrayDec -> 'NAME' 'COLON' BasicTyp 'LSP' . 'INT' 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   shift 25
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   shift 48
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 25:  items:    Var -> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP' . 
  actions:    action 'HIGH' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'EOF' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'PRINT' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'ASG' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'SKIP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'ABORT' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'FUNC' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'PROC' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'NEG' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'PLUS' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'MINUS' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'TIMES' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'AND' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'EQ' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'LE' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'LT' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'GT' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'NEQ' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'COMMA' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'COLON' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'SEMI' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'BAR' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'TO' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'IF' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'FI' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'DO' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'OD' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'BEGIN' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'END' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'RET' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'LP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'LCP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'LSP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'RP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'RCP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'RSP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'ITYP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'BTYP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'FTYP' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'NAME' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'STRING' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'BOOL' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'INT' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action 'error' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action '#' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
    action '$$' (noprec):   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'
  immediate action:   reduce Var --> 'NAME' 'COLON' BasicTyp 'LSP' 'RSP'  gotos:state 26:  items:    VarL -> VarList . 
  actions:    action 'HIGH' (noprec):   reduce VarL --> VarList
    action 'EOF' (noprec):   reduce VarL --> VarList
    action 'PRINT' (noprec):   reduce VarL --> VarList
    action 'ASG' (noprec):   reduce VarL --> VarList
    action 'SKIP' (noprec):   reduce VarL --> VarList
    action 'ABORT' (noprec):   reduce VarL --> VarList
    action 'FUNC' (noprec):   reduce VarL --> VarList
    action 'PROC' (noprec):   reduce VarL --> VarList
    action 'NEG' (noprec):   reduce VarL --> VarList
    action 'PLUS' (noprec):   reduce VarL --> VarList
    action 'MINUS' (noprec):   reduce VarL --> VarList
    action 'TIMES' (noprec):   reduce VarL --> VarList
    action 'AND' (noprec):   reduce VarL --> VarList
    action 'EQ' (noprec):   reduce VarL --> VarList
    action 'LE' (noprec):   reduce VarL --> VarList
    action 'LT' (noprec):   reduce VarL --> VarList
    action 'GT' (noprec):   reduce VarL --> VarList
    action 'NEQ' (noprec):   reduce VarL --> VarList
    action 'COMMA' (noprec):   reduce VarL --> VarList
    action 'COLON' (noprec):   reduce VarL --> VarList
    action 'SEMI' (noprec):   reduce VarL --> VarList
    action 'BAR' (noprec):   reduce VarL --> VarList
    action 'TO' (noprec):   reduce VarL --> VarList
    action 'IF' (noprec):   reduce VarL --> VarList
    action 'FI' (noprec):   reduce VarL --> VarList
    action 'DO' (noprec):   reduce VarL --> VarList
    action 'OD' (noprec):   reduce VarL --> VarList
    action 'BEGIN' (noprec):   reduce VarL --> VarList
    action 'END' (noprec):   reduce VarL --> VarList
    action 'RET' (noprec):   reduce VarL --> VarList
    action 'LP' (noprec):   reduce VarL --> VarList
    action 'LCP' (noprec):   reduce VarL --> VarList
    action 'LSP' (noprec):   reduce VarL --> VarList
    action 'RP' (noprec):   reduce VarL --> VarList
    action 'RCP' (noprec):   reduce VarL --> VarList
    action 'RSP' (noprec):   reduce VarL --> VarList
    action 'ITYP' (noprec):   reduce VarL --> VarList
    action 'BTYP' (noprec):   reduce VarL --> VarList
    action 'FTYP' (noprec):   reduce VarL --> VarList
    action 'NAME' (noprec):   reduce VarL --> VarList
    action 'STRING' (noprec):   reduce VarL --> VarList
    action 'BOOL' (noprec):   reduce VarL --> VarList
    action 'INT' (noprec):   reduce VarL --> VarList
    action 'error' (noprec):   reduce VarL --> VarList
    action '#' (noprec):   reduce VarL --> VarList
    action '$$' (noprec):   reduce VarL --> VarList
  immediate action:   reduce VarL --> VarList  gotos:state 27:  items:    VarList -> Var . 
    VarList -> Var . 'COMMA' VarList
  actions:    action 'HIGH' (noprec):   reduce VarList --> Var
    action 'EOF' (noprec):   reduce VarList --> Var
    action 'PRINT' (noprec):   reduce VarList --> Var
    action 'ASG' (noprec):   reduce VarList --> Var
    action 'SKIP' (noprec):   reduce VarList --> Var
    action 'ABORT' (noprec):   reduce VarList --> Var
    action 'FUNC' (noprec):   reduce VarList --> Var
    action 'PROC' (noprec):   reduce VarList --> Var
    action 'NEG' (noprec):   reduce VarList --> Var
    action 'PLUS' (noprec):   reduce VarList --> Var
    action 'MINUS' (noprec):   reduce VarList --> Var
    action 'TIMES' (noprec):   reduce VarList --> Var
    action 'AND' (noprec):   reduce VarList --> Var
    action 'EQ' (noprec):   reduce VarList --> Var
    action 'LE' (noprec):   reduce VarList --> Var
    action 'LT' (noprec):   reduce VarList --> Var
    action 'GT' (noprec):   reduce VarList --> Var
    action 'NEQ' (noprec):   reduce VarList --> Var
    action 'COMMA' (noprec):   shift 28
    action 'COLON' (noprec):   reduce VarList --> Var
    action 'SEMI' (noprec):   reduce VarList --> Var
    action 'BAR' (noprec):   reduce VarList --> Var
    action 'TO' (noprec):   reduce VarList --> Var
    action 'IF' (noprec):   reduce VarList --> Var
    action 'FI' (noprec):   reduce VarList --> Var
    action 'DO' (noprec):   reduce VarList --> Var
    action 'OD' (noprec):   reduce VarList --> Var
    action 'BEGIN' (noprec):   reduce VarList --> Var
    action 'END' (noprec):   reduce VarList --> Var
    action 'RET' (noprec):   reduce VarList --> Var
    action 'LP' (noprec):   reduce VarList --> Var
    action 'LCP' (noprec):   reduce VarList --> Var
    action 'LSP' (noprec):   reduce VarList --> Var
    action 'RP' (noprec):   reduce VarList --> Var
    action 'RCP' (noprec):   reduce VarList --> Var
    action 'RSP' (noprec):   reduce VarList --> Var
    action 'ITYP' (noprec):   reduce VarList --> Var
    action 'BTYP' (noprec):   reduce VarList --> Var
    action 'FTYP' (noprec):   reduce VarList --> Var
    action 'NAME' (noprec):   reduce VarList --> Var
    action 'STRING' (noprec):   reduce VarList --> Var
    action 'BOOL' (noprec):   reduce VarList --> Var
    action 'INT' (noprec):   reduce VarList --> Var
    action 'error' (noprec):   reduce VarList --> Var
    action '#' (noprec):   reduce VarList --> Var
    action '$$' (noprec):   reduce VarList --> Var
  immediate action: <none>  gotos:state 28:  items:    VarList -> Var 'COMMA' . VarList
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 17
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Var: 27
    goto VarList: 29
state 29:  items:    VarList -> Var 'COMMA' VarList . 
  actions:    action 'HIGH' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'EOF' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'PRINT' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'ASG' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'SKIP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'ABORT' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'FUNC' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'PROC' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'NEG' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'PLUS' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'MINUS' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'TIMES' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'AND' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'EQ' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'LE' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'LT' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'GT' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'NEQ' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'COMMA' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'COLON' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'SEMI' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'BAR' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'TO' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'IF' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'FI' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'DO' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'OD' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'BEGIN' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'END' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'RET' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'LP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'LCP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'LSP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'RP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'RCP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'RSP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'ITYP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'BTYP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'FTYP' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'NAME' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'STRING' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'BOOL' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'INT' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action 'error' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action '#' (noprec):   reduce VarList --> Var 'COMMA' VarList
    action '$$' (noprec):   reduce VarList --> Var 'COMMA' VarList
  immediate action:   reduce VarList --> Var 'COMMA' VarList  gotos:state 30:  items:    Dec -> Var . 
  actions:    action 'HIGH' (noprec):   reduce Dec --> Var
    action 'EOF' (noprec):   reduce Dec --> Var
    action 'PRINT' (noprec):   reduce Dec --> Var
    action 'ASG' (noprec):   reduce Dec --> Var
    action 'SKIP' (noprec):   reduce Dec --> Var
    action 'ABORT' (noprec):   reduce Dec --> Var
    action 'FUNC' (noprec):   reduce Dec --> Var
    action 'PROC' (noprec):   reduce Dec --> Var
    action 'NEG' (noprec):   reduce Dec --> Var
    action 'PLUS' (noprec):   reduce Dec --> Var
    action 'MINUS' (noprec):   reduce Dec --> Var
    action 'TIMES' (noprec):   reduce Dec --> Var
    action 'AND' (noprec):   reduce Dec --> Var
    action 'EQ' (noprec):   reduce Dec --> Var
    action 'LE' (noprec):   reduce Dec --> Var
    action 'LT' (noprec):   reduce Dec --> Var
    action 'GT' (noprec):   reduce Dec --> Var
    action 'NEQ' (noprec):   reduce Dec --> Var
    action 'COMMA' (noprec):   reduce Dec --> Var
    action 'COLON' (noprec):   reduce Dec --> Var
    action 'SEMI' (noprec):   reduce Dec --> Var
    action 'BAR' (noprec):   reduce Dec --> Var
    action 'TO' (noprec):   reduce Dec --> Var
    action 'IF' (noprec):   reduce Dec --> Var
    action 'FI' (noprec):   reduce Dec --> Var
    action 'DO' (noprec):   reduce Dec --> Var
    action 'OD' (noprec):   reduce Dec --> Var
    action 'BEGIN' (noprec):   reduce Dec --> Var
    action 'END' (noprec):   reduce Dec --> Var
    action 'RET' (noprec):   reduce Dec --> Var
    action 'LP' (noprec):   reduce Dec --> Var
    action 'LCP' (noprec):   reduce Dec --> Var
    action 'LSP' (noprec):   reduce Dec --> Var
    action 'RP' (noprec):   reduce Dec --> Var
    action 'RCP' (noprec):   reduce Dec --> Var
    action 'RSP' (noprec):   reduce Dec --> Var
    action 'ITYP' (noprec):   reduce Dec --> Var
    action 'BTYP' (noprec):   reduce Dec --> Var
    action 'FTYP' (noprec):   reduce Dec --> Var
    action 'NAME' (noprec):   reduce Dec --> Var
    action 'STRING' (noprec):   reduce Dec --> Var
    action 'BOOL' (noprec):   reduce Dec --> Var
    action 'INT' (noprec):   reduce Dec --> Var
    action 'error' (noprec):   reduce Dec --> Var
    action '#' (noprec):   reduce Dec --> Var
    action '$$' (noprec):   reduce Dec --> Var
  immediate action:   reduce Dec --> Var  gotos:state 31:  items:    Dec -> 'FUNC' . 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 32
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 32:  items:    Dec -> 'FUNC' 'NAME' . 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 33
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 33:  items:    Dec -> 'FUNC' 'NAME' 'LP' . VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
  actions:    action 'HIGH' (noprec):   reduce VarL --> 
    action 'EOF' (noprec):   reduce VarL --> 
    action 'PRINT' (noprec):   reduce VarL --> 
    action 'ASG' (noprec):   reduce VarL --> 
    action 'SKIP' (noprec):   reduce VarL --> 
    action 'ABORT' (noprec):   reduce VarL --> 
    action 'FUNC' (noprec):   reduce VarL --> 
    action 'PROC' (noprec):   reduce VarL --> 
    action 'NEG' (noprec):   reduce VarL --> 
    action 'PLUS' (noprec):   reduce VarL --> 
    action 'MINUS' (noprec):   reduce VarL --> 
    action 'TIMES' (noprec):   reduce VarL --> 
    action 'AND' (noprec):   reduce VarL --> 
    action 'EQ' (noprec):   reduce VarL --> 
    action 'LE' (noprec):   reduce VarL --> 
    action 'LT' (noprec):   reduce VarL --> 
    action 'GT' (noprec):   reduce VarL --> 
    action 'NEQ' (noprec):   reduce VarL --> 
    action 'COMMA' (noprec):   reduce VarL --> 
    action 'COLON' (noprec):   reduce VarL --> 
    action 'SEMI' (noprec):   reduce VarL --> 
    action 'BAR' (noprec):   reduce VarL --> 
    action 'TO' (noprec):   reduce VarL --> 
    action 'IF' (noprec):   reduce VarL --> 
    action 'FI' (noprec):   reduce VarL --> 
    action 'DO' (noprec):   reduce VarL --> 
    action 'OD' (noprec):   reduce VarL --> 
    action 'BEGIN' (noprec):   reduce VarL --> 
    action 'END' (noprec):   reduce VarL --> 
    action 'RET' (noprec):   reduce VarL --> 
    action 'LP' (noprec):   reduce VarL --> 
    action 'LCP' (noprec):   reduce VarL --> 
    action 'LSP' (noprec):   reduce VarL --> 
    action 'RP' (noprec):   reduce VarL --> 
    action 'RCP' (noprec):   reduce VarL --> 
    action 'RSP' (noprec):   reduce VarL --> 
    action 'ITYP' (noprec):   reduce VarL --> 
    action 'BTYP' (noprec):   reduce VarL --> 
    action 'FTYP' (noprec):   reduce VarL --> 
    action 'NAME' (noprec):   shift 17
    action 'STRING' (noprec):   reduce VarL --> 
    action 'BOOL' (noprec):   reduce VarL --> 
    action 'INT' (noprec):   reduce VarL --> 
    action 'error' (noprec):   reduce VarL --> 
    action '#' (noprec):   reduce VarL --> 
    action '$$' (noprec):   reduce VarL --> 
  immediate action: <none>  gotos:    goto Var: 27
    goto VarL: 34
    goto VarList: 26
state 34:  items:    Dec -> 'FUNC' 'NAME' 'LP' VarL . 'RP' 'COLON' BasicTyp 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   shift 35
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 35:  items:    Dec -> 'FUNC' 'NAME' 'LP' VarL 'RP' . 'COLON' BasicTyp 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 36
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 36:  items:    Dec -> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' . BasicTyp 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   shift 14
    action 'BTYP' (noprec):   shift 13
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto BasicTyp: 37
state 37:  items:    Dec -> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp . 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (explicit left 9998):   shift 38
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 38:  items:    Dec -> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' . Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   error
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 53
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 60
    goto Stm: 39
state 39:  items:    Dec -> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm . 
  actions:    action 'HIGH' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'EOF' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'PRINT' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'ASG' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'SKIP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'ABORT' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'FUNC' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'PROC' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'NEG' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'PLUS' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'MINUS' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'TIMES' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'AND' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'EQ' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'LE' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'LT' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'GT' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'NEQ' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'COMMA' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'COLON' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'SEMI' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'BAR' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'TO' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'IF' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'FI' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'DO' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'OD' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'BEGIN' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'END' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'RET' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'LP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'LCP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'LSP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'RP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'RCP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'RSP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'ITYP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'BTYP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'FTYP' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'NAME' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'STRING' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'BOOL' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'INT' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action 'error' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action '#' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
    action '$$' (explicit left 9998):   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm
  immediate action:   reduce Dec --> 'FUNC' 'NAME' 'LP' VarL 'RP' 'COLON' BasicTyp 'EQ' Stm  gotos:state 40:  items:    Dec -> 'PROC' . 'NAME' 'LP' VarL 'RP' 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 41
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 41:  items:    Dec -> 'PROC' 'NAME' . 'LP' VarL 'RP' 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 42
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 42:  items:    Dec -> 'PROC' 'NAME' 'LP' . VarL 'RP' 'EQ' Stm
  actions:    action 'HIGH' (noprec):   reduce VarL --> 
    action 'EOF' (noprec):   reduce VarL --> 
    action 'PRINT' (noprec):   reduce VarL --> 
    action 'ASG' (noprec):   reduce VarL --> 
    action 'SKIP' (noprec):   reduce VarL --> 
    action 'ABORT' (noprec):   reduce VarL --> 
    action 'FUNC' (noprec):   reduce VarL --> 
    action 'PROC' (noprec):   reduce VarL --> 
    action 'NEG' (noprec):   reduce VarL --> 
    action 'PLUS' (noprec):   reduce VarL --> 
    action 'MINUS' (noprec):   reduce VarL --> 
    action 'TIMES' (noprec):   reduce VarL --> 
    action 'AND' (noprec):   reduce VarL --> 
    action 'EQ' (noprec):   reduce VarL --> 
    action 'LE' (noprec):   reduce VarL --> 
    action 'LT' (noprec):   reduce VarL --> 
    action 'GT' (noprec):   reduce VarL --> 
    action 'NEQ' (noprec):   reduce VarL --> 
    action 'COMMA' (noprec):   reduce VarL --> 
    action 'COLON' (noprec):   reduce VarL --> 
    action 'SEMI' (noprec):   reduce VarL --> 
    action 'BAR' (noprec):   reduce VarL --> 
    action 'TO' (noprec):   reduce VarL --> 
    action 'IF' (noprec):   reduce VarL --> 
    action 'FI' (noprec):   reduce VarL --> 
    action 'DO' (noprec):   reduce VarL --> 
    action 'OD' (noprec):   reduce VarL --> 
    action 'BEGIN' (noprec):   reduce VarL --> 
    action 'END' (noprec):   reduce VarL --> 
    action 'RET' (noprec):   reduce VarL --> 
    action 'LP' (noprec):   reduce VarL --> 
    action 'LCP' (noprec):   reduce VarL --> 
    action 'LSP' (noprec):   reduce VarL --> 
    action 'RP' (noprec):   reduce VarL --> 
    action 'RCP' (noprec):   reduce VarL --> 
    action 'RSP' (noprec):   reduce VarL --> 
    action 'ITYP' (noprec):   reduce VarL --> 
    action 'BTYP' (noprec):   reduce VarL --> 
    action 'FTYP' (noprec):   reduce VarL --> 
    action 'NAME' (noprec):   shift 17
    action 'STRING' (noprec):   reduce VarL --> 
    action 'BOOL' (noprec):   reduce VarL --> 
    action 'INT' (noprec):   reduce VarL --> 
    action 'error' (noprec):   reduce VarL --> 
    action '#' (noprec):   reduce VarL --> 
    action '$$' (noprec):   reduce VarL --> 
  immediate action: <none>  gotos:    goto Var: 27
    goto VarL: 43
    goto VarList: 26
state 43:  items:    Dec -> 'PROC' 'NAME' 'LP' VarL . 'RP' 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   shift 44
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 44:  items:    Dec -> 'PROC' 'NAME' 'LP' VarL 'RP' . 'EQ' Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (explicit left 9998):   shift 45
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 45:  items:    Dec -> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' . Stm
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   error
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 53
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 60
    goto Stm: 46
state 46:  items:    Dec -> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm . 
  actions:    action 'HIGH' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'EOF' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'PRINT' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'ASG' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'SKIP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'ABORT' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'FUNC' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'PROC' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'NEG' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'PLUS' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'MINUS' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'TIMES' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'AND' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'EQ' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'LE' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'LT' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'GT' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'NEQ' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'COMMA' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'COLON' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'SEMI' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'BAR' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'TO' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'IF' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'FI' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'DO' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'OD' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'BEGIN' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'END' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'RET' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'LP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'LCP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'LSP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'RP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'RCP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'RSP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'ITYP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'BTYP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'FTYP' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'NAME' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'STRING' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'BOOL' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'INT' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action 'error' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action '#' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
    action '$$' (explicit left 9998):   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm
  immediate action:   reduce Dec --> 'PROC' 'NAME' 'LP' VarL 'RP' 'EQ' Stm  gotos:state 47:  items:    Dec -> ArrayDec . 
  actions:    action 'HIGH' (noprec):   reduce Dec --> ArrayDec
    action 'EOF' (noprec):   reduce Dec --> ArrayDec
    action 'PRINT' (noprec):   reduce Dec --> ArrayDec
    action 'ASG' (noprec):   reduce Dec --> ArrayDec
    action 'SKIP' (noprec):   reduce Dec --> ArrayDec
    action 'ABORT' (noprec):   reduce Dec --> ArrayDec
    action 'FUNC' (noprec):   reduce Dec --> ArrayDec
    action 'PROC' (noprec):   reduce Dec --> ArrayDec
    action 'NEG' (noprec):   reduce Dec --> ArrayDec
    action 'PLUS' (noprec):   reduce Dec --> ArrayDec
    action 'MINUS' (noprec):   reduce Dec --> ArrayDec
    action 'TIMES' (noprec):   reduce Dec --> ArrayDec
    action 'AND' (noprec):   reduce Dec --> ArrayDec
    action 'EQ' (noprec):   reduce Dec --> ArrayDec
    action 'LE' (noprec):   reduce Dec --> ArrayDec
    action 'LT' (noprec):   reduce Dec --> ArrayDec
    action 'GT' (noprec):   reduce Dec --> ArrayDec
    action 'NEQ' (noprec):   reduce Dec --> ArrayDec
    action 'COMMA' (noprec):   reduce Dec --> ArrayDec
    action 'COLON' (noprec):   reduce Dec --> ArrayDec
    action 'SEMI' (noprec):   reduce Dec --> ArrayDec
    action 'BAR' (noprec):   reduce Dec --> ArrayDec
    action 'TO' (noprec):   reduce Dec --> ArrayDec
    action 'IF' (noprec):   reduce Dec --> ArrayDec
    action 'FI' (noprec):   reduce Dec --> ArrayDec
    action 'DO' (noprec):   reduce Dec --> ArrayDec
    action 'OD' (noprec):   reduce Dec --> ArrayDec
    action 'BEGIN' (noprec):   reduce Dec --> ArrayDec
    action 'END' (noprec):   reduce Dec --> ArrayDec
    action 'RET' (noprec):   reduce Dec --> ArrayDec
    action 'LP' (noprec):   reduce Dec --> ArrayDec
    action 'LCP' (noprec):   reduce Dec --> ArrayDec
    action 'LSP' (noprec):   reduce Dec --> ArrayDec
    action 'RP' (noprec):   reduce Dec --> ArrayDec
    action 'RCP' (noprec):   reduce Dec --> ArrayDec
    action 'RSP' (noprec):   reduce Dec --> ArrayDec
    action 'ITYP' (noprec):   reduce Dec --> ArrayDec
    action 'BTYP' (noprec):   reduce Dec --> ArrayDec
    action 'FTYP' (noprec):   reduce Dec --> ArrayDec
    action 'NAME' (noprec):   reduce Dec --> ArrayDec
    action 'STRING' (noprec):   reduce Dec --> ArrayDec
    action 'BOOL' (noprec):   reduce Dec --> ArrayDec
    action 'INT' (noprec):   reduce Dec --> ArrayDec
    action 'error' (noprec):   reduce Dec --> ArrayDec
    action '#' (noprec):   reduce Dec --> ArrayDec
    action '$$' (noprec):   reduce Dec --> ArrayDec
  immediate action:   reduce Dec --> ArrayDec  gotos:state 48:  items:    ArrayDec -> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' . 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   shift 49
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 49:  items:    ArrayDec -> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP' . 
  actions:    action 'HIGH' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'EOF' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'PRINT' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'ASG' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'SKIP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'ABORT' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'FUNC' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'PROC' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'NEG' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'PLUS' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'MINUS' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'TIMES' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'AND' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'EQ' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'LE' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'LT' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'GT' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'NEQ' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'COMMA' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'COLON' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'SEMI' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'BAR' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'TO' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'IF' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'FI' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'DO' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'OD' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'BEGIN' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'END' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'RET' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'LP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'LCP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'LSP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'RP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'RCP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'RSP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'ITYP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'BTYP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'FTYP' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'NAME' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'STRING' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'BOOL' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'INT' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action 'error' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action '#' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
    action '$$' (noprec):   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'
  immediate action:   reduce ArrayDec --> 'NAME' 'COLON' BasicTyp 'LSP' 'INT' 'RSP'  gotos:state 50:  items:    DecList -> Dec . 
    DecList -> Dec . 'COMMA' DecList
  actions:    action 'HIGH' (noprec):   reduce DecList --> Dec
    action 'EOF' (noprec):   reduce DecList --> Dec
    action 'PRINT' (noprec):   reduce DecList --> Dec
    action 'ASG' (noprec):   reduce DecList --> Dec
    action 'SKIP' (noprec):   reduce DecList --> Dec
    action 'ABORT' (noprec):   reduce DecList --> Dec
    action 'FUNC' (noprec):   reduce DecList --> Dec
    action 'PROC' (noprec):   reduce DecList --> Dec
    action 'NEG' (noprec):   reduce DecList --> Dec
    action 'PLUS' (noprec):   reduce DecList --> Dec
    action 'MINUS' (noprec):   reduce DecList --> Dec
    action 'TIMES' (noprec):   reduce DecList --> Dec
    action 'AND' (noprec):   reduce DecList --> Dec
    action 'EQ' (noprec):   reduce DecList --> Dec
    action 'LE' (noprec):   reduce DecList --> Dec
    action 'LT' (noprec):   reduce DecList --> Dec
    action 'GT' (noprec):   reduce DecList --> Dec
    action 'NEQ' (noprec):   reduce DecList --> Dec
    action 'COMMA' (noprec):   shift 51
    action 'COLON' (noprec):   reduce DecList --> Dec
    action 'SEMI' (noprec):   reduce DecList --> Dec
    action 'BAR' (noprec):   reduce DecList --> Dec
    action 'TO' (noprec):   reduce DecList --> Dec
    action 'IF' (noprec):   reduce DecList --> Dec
    action 'FI' (noprec):   reduce DecList --> Dec
    action 'DO' (noprec):   reduce DecList --> Dec
    action 'OD' (noprec):   reduce DecList --> Dec
    action 'BEGIN' (noprec):   reduce DecList --> Dec
    action 'END' (noprec):   reduce DecList --> Dec
    action 'RET' (noprec):   reduce DecList --> Dec
    action 'LP' (noprec):   reduce DecList --> Dec
    action 'LCP' (noprec):   reduce DecList --> Dec
    action 'LSP' (noprec):   reduce DecList --> Dec
    action 'RP' (noprec):   reduce DecList --> Dec
    action 'RCP' (noprec):   reduce DecList --> Dec
    action 'RSP' (noprec):   reduce DecList --> Dec
    action 'ITYP' (noprec):   reduce DecList --> Dec
    action 'BTYP' (noprec):   reduce DecList --> Dec
    action 'FTYP' (noprec):   reduce DecList --> Dec
    action 'NAME' (noprec):   reduce DecList --> Dec
    action 'STRING' (noprec):   reduce DecList --> Dec
    action 'BOOL' (noprec):   reduce DecList --> Dec
    action 'INT' (noprec):   reduce DecList --> Dec
    action 'error' (noprec):   reduce DecList --> Dec
    action '#' (noprec):   reduce DecList --> Dec
    action '$$' (noprec):   reduce DecList --> Dec
  immediate action: <none>  gotos:state 51:  items:    DecList -> Dec 'COMMA' . DecList
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   shift 31
    action 'PROC' (noprec):   shift 40
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 18
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Var: 30
    goto Dec: 50
    goto ArrayDec: 47
    goto DecList: 52
state 52:  items:    DecList -> Dec 'COMMA' DecList . 
  actions:    action 'HIGH' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'EOF' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'PRINT' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'ASG' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'SKIP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'ABORT' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'FUNC' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'PROC' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'NEG' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'PLUS' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'MINUS' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'TIMES' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'AND' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'EQ' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'LE' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'LT' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'GT' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'NEQ' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'COMMA' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'COLON' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'SEMI' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'BAR' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'TO' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'IF' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'FI' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'DO' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'OD' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'BEGIN' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'END' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'RET' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'LP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'LCP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'LSP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'RP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'RCP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'RSP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'ITYP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'BTYP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'FTYP' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'NAME' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'STRING' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'BOOL' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'INT' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action 'error' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action '#' (noprec):   reduce DecList --> Dec 'COMMA' DecList
    action '$$' (noprec):   reduce DecList --> Dec 'COMMA' DecList
  immediate action:   reduce DecList --> Dec 'COMMA' DecList  gotos:state 53:  items:    Access -> 'NAME' . 
    Access -> 'NAME' . 'LSP' Exp 'RSP'
    Stm -> 'NAME' . 'LP' ExpL 'RP'
  actions:    action 'HIGH' (noprec):   reduce Access --> 'NAME'
    action 'EOF' (noprec):   reduce Access --> 'NAME'
    action 'PRINT' (noprec):   reduce Access --> 'NAME'
    action 'ASG' (noprec):   reduce Access --> 'NAME'
    action 'SKIP' (noprec):   reduce Access --> 'NAME'
    action 'ABORT' (noprec):   reduce Access --> 'NAME'
    action 'FUNC' (noprec):   reduce Access --> 'NAME'
    action 'PROC' (noprec):   reduce Access --> 'NAME'
    action 'NEG' (noprec):   reduce Access --> 'NAME'
    action 'PLUS' (noprec):   reduce Access --> 'NAME'
    action 'MINUS' (noprec):   reduce Access --> 'NAME'
    action 'TIMES' (noprec):   reduce Access --> 'NAME'
    action 'AND' (noprec):   reduce Access --> 'NAME'
    action 'EQ' (noprec):   reduce Access --> 'NAME'
    action 'LE' (noprec):   reduce Access --> 'NAME'
    action 'LT' (noprec):   reduce Access --> 'NAME'
    action 'GT' (noprec):   reduce Access --> 'NAME'
    action 'NEQ' (noprec):   reduce Access --> 'NAME'
    action 'COMMA' (noprec):   reduce Access --> 'NAME'
    action 'COLON' (noprec):   reduce Access --> 'NAME'
    action 'SEMI' (noprec):   reduce Access --> 'NAME'
    action 'BAR' (noprec):   reduce Access --> 'NAME'
    action 'TO' (noprec):   reduce Access --> 'NAME'
    action 'IF' (noprec):   reduce Access --> 'NAME'
    action 'FI' (noprec):   reduce Access --> 'NAME'
    action 'DO' (noprec):   reduce Access --> 'NAME'
    action 'OD' (noprec):   reduce Access --> 'NAME'
    action 'BEGIN' (noprec):   reduce Access --> 'NAME'
    action 'END' (noprec):   reduce Access --> 'NAME'
    action 'RET' (noprec):   reduce Access --> 'NAME'
    action 'LP' (noprec):   shift 80
    action 'LCP' (noprec):   reduce Access --> 'NAME'
    action 'LSP' (noprec):   shift 55
    action 'RP' (noprec):   reduce Access --> 'NAME'
    action 'RCP' (noprec):   reduce Access --> 'NAME'
    action 'RSP' (noprec):   reduce Access --> 'NAME'
    action 'ITYP' (noprec):   reduce Access --> 'NAME'
    action 'BTYP' (noprec):   reduce Access --> 'NAME'
    action 'FTYP' (noprec):   reduce Access --> 'NAME'
    action 'NAME' (noprec):   reduce Access --> 'NAME'
    action 'STRING' (noprec):   reduce Access --> 'NAME'
    action 'BOOL' (noprec):   reduce Access --> 'NAME'
    action 'INT' (noprec):   reduce Access --> 'NAME'
    action 'error' (noprec):   reduce Access --> 'NAME'
    action '#' (noprec):   reduce Access --> 'NAME'
    action '$$' (noprec):   reduce Access --> 'NAME'
  immediate action: <none>  gotos:state 54:  items:    Access -> 'NAME' . 
    Access -> 'NAME' . 'LSP' Exp 'RSP'
    Exp -> 'NAME' . 'LP' ExpL 'RP'
  actions:    action 'HIGH' (noprec):   reduce Access --> 'NAME'
    action 'EOF' (noprec):   reduce Access --> 'NAME'
    action 'PRINT' (noprec):   reduce Access --> 'NAME'
    action 'ASG' (noprec):   reduce Access --> 'NAME'
    action 'SKIP' (noprec):   reduce Access --> 'NAME'
    action 'ABORT' (noprec):   reduce Access --> 'NAME'
    action 'FUNC' (noprec):   reduce Access --> 'NAME'
    action 'PROC' (noprec):   reduce Access --> 'NAME'
    action 'NEG' (noprec):   reduce Access --> 'NAME'
    action 'PLUS' (noprec):   reduce Access --> 'NAME'
    action 'MINUS' (noprec):   reduce Access --> 'NAME'
    action 'TIMES' (noprec):   reduce Access --> 'NAME'
    action 'AND' (noprec):   reduce Access --> 'NAME'
    action 'EQ' (noprec):   reduce Access --> 'NAME'
    action 'LE' (noprec):   reduce Access --> 'NAME'
    action 'LT' (noprec):   reduce Access --> 'NAME'
    action 'GT' (noprec):   reduce Access --> 'NAME'
    action 'NEQ' (noprec):   reduce Access --> 'NAME'
    action 'COMMA' (noprec):   reduce Access --> 'NAME'
    action 'COLON' (noprec):   reduce Access --> 'NAME'
    action 'SEMI' (noprec):   reduce Access --> 'NAME'
    action 'BAR' (noprec):   reduce Access --> 'NAME'
    action 'TO' (noprec):   reduce Access --> 'NAME'
    action 'IF' (noprec):   reduce Access --> 'NAME'
    action 'FI' (noprec):   reduce Access --> 'NAME'
    action 'DO' (noprec):   reduce Access --> 'NAME'
    action 'OD' (noprec):   reduce Access --> 'NAME'
    action 'BEGIN' (noprec):   reduce Access --> 'NAME'
    action 'END' (noprec):   reduce Access --> 'NAME'
    action 'RET' (noprec):   reduce Access --> 'NAME'
    action 'LP' (noprec):   shift 127
    action 'LCP' (noprec):   reduce Access --> 'NAME'
    action 'LSP' (noprec):   shift 55
    action 'RP' (noprec):   reduce Access --> 'NAME'
    action 'RCP' (noprec):   reduce Access --> 'NAME'
    action 'RSP' (noprec):   reduce Access --> 'NAME'
    action 'ITYP' (noprec):   reduce Access --> 'NAME'
    action 'BTYP' (noprec):   reduce Access --> 'NAME'
    action 'FTYP' (noprec):   reduce Access --> 'NAME'
    action 'NAME' (noprec):   reduce Access --> 'NAME'
    action 'STRING' (noprec):   reduce Access --> 'NAME'
    action 'BOOL' (noprec):   reduce Access --> 'NAME'
    action 'INT' (noprec):   reduce Access --> 'NAME'
    action 'error' (noprec):   reduce Access --> 'NAME'
    action '#' (noprec):   reduce Access --> 'NAME'
    action '$$' (noprec):   reduce Access --> 'NAME'
  immediate action: <none>  gotos:state 55:  items:    Access -> 'NAME' 'LSP' . Exp 'RSP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 56
state 56:  items:    Access -> 'NAME' 'LSP' Exp . 'RSP'
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   shift 57
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 57:  items:    Access -> 'NAME' 'LSP' Exp 'RSP' . 
  actions:    action 'HIGH' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'EOF' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'PRINT' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'ASG' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'SKIP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'ABORT' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'FUNC' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'PROC' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'NEG' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'PLUS' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'MINUS' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'TIMES' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'AND' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'EQ' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'LE' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'LT' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'GT' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'NEQ' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'COMMA' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'COLON' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'SEMI' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'BAR' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'TO' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'IF' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'FI' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'DO' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'OD' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'BEGIN' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'END' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'RET' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'LP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'LCP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'LSP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'RP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'RCP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'RSP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'ITYP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'BTYP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'FTYP' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'NAME' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'STRING' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'BOOL' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'INT' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action 'error' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action '#' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
    action '$$' (noprec):   reduce Access --> 'NAME' 'LSP' Exp 'RSP'
  immediate action:   reduce Access --> 'NAME' 'LSP' Exp 'RSP'  gotos:state 58:  items:    Stm -> 'PRINT' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 59
state 59:  items:    Stm -> 'PRINT' Exp . 
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'EOF' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'PRINT' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'ASG' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'SKIP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'ABORT' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'FUNC' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'PROC' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'NEG' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'COLON' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'SEMI' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'BAR' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'TO' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'IF' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'FI' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'DO' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'OD' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'BEGIN' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'END' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'RET' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'LP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'LCP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'LSP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'RP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'RCP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'RSP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'ITYP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'BTYP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'FTYP' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'NAME' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'STRING' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'BOOL' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'INT' (noprec):   reduce Stm --> 'PRINT' Exp
    action 'error' (noprec):   reduce Stm --> 'PRINT' Exp
    action '#' (noprec):   reduce Stm --> 'PRINT' Exp
    action '$$' (noprec):   reduce Stm --> 'PRINT' Exp
  immediate action: <none>  gotos:state 60:  items:    Stm -> Access . 'ASG' Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   shift 61
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 61:  items:    Stm -> Access 'ASG' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 62
state 62:  items:    Stm -> Access 'ASG' Exp . 
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'EOF' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'PRINT' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'ASG' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'SKIP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'ABORT' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'FUNC' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'PROC' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'NEG' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'COLON' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'SEMI' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'BAR' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'TO' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'IF' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'FI' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'DO' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'OD' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'BEGIN' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'END' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'RET' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'LP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'LCP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'LSP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'RP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'RCP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'RSP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'ITYP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'BTYP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'FTYP' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'NAME' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'STRING' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'BOOL' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'INT' (noprec):   reduce Stm --> Access 'ASG' Exp
    action 'error' (noprec):   reduce Stm --> Access 'ASG' Exp
    action '#' (noprec):   reduce Stm --> Access 'ASG' Exp
    action '$$' (noprec):   reduce Stm --> Access 'ASG' Exp
  immediate action: <none>  gotos:state 63:  items:    Stm -> 'SKIP' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'SKIP'
    action 'EOF' (noprec):   reduce Stm --> 'SKIP'
    action 'PRINT' (noprec):   reduce Stm --> 'SKIP'
    action 'ASG' (noprec):   reduce Stm --> 'SKIP'
    action 'SKIP' (noprec):   reduce Stm --> 'SKIP'
    action 'ABORT' (noprec):   reduce Stm --> 'SKIP'
    action 'FUNC' (noprec):   reduce Stm --> 'SKIP'
    action 'PROC' (noprec):   reduce Stm --> 'SKIP'
    action 'NEG' (noprec):   reduce Stm --> 'SKIP'
    action 'PLUS' (noprec):   reduce Stm --> 'SKIP'
    action 'MINUS' (noprec):   reduce Stm --> 'SKIP'
    action 'TIMES' (noprec):   reduce Stm --> 'SKIP'
    action 'AND' (noprec):   reduce Stm --> 'SKIP'
    action 'EQ' (noprec):   reduce Stm --> 'SKIP'
    action 'LE' (noprec):   reduce Stm --> 'SKIP'
    action 'LT' (noprec):   reduce Stm --> 'SKIP'
    action 'GT' (noprec):   reduce Stm --> 'SKIP'
    action 'NEQ' (noprec):   reduce Stm --> 'SKIP'
    action 'COMMA' (noprec):   reduce Stm --> 'SKIP'
    action 'COLON' (noprec):   reduce Stm --> 'SKIP'
    action 'SEMI' (noprec):   reduce Stm --> 'SKIP'
    action 'BAR' (noprec):   reduce Stm --> 'SKIP'
    action 'TO' (noprec):   reduce Stm --> 'SKIP'
    action 'IF' (noprec):   reduce Stm --> 'SKIP'
    action 'FI' (noprec):   reduce Stm --> 'SKIP'
    action 'DO' (noprec):   reduce Stm --> 'SKIP'
    action 'OD' (noprec):   reduce Stm --> 'SKIP'
    action 'BEGIN' (noprec):   reduce Stm --> 'SKIP'
    action 'END' (noprec):   reduce Stm --> 'SKIP'
    action 'RET' (noprec):   reduce Stm --> 'SKIP'
    action 'LP' (noprec):   reduce Stm --> 'SKIP'
    action 'LCP' (noprec):   reduce Stm --> 'SKIP'
    action 'LSP' (noprec):   reduce Stm --> 'SKIP'
    action 'RP' (noprec):   reduce Stm --> 'SKIP'
    action 'RCP' (noprec):   reduce Stm --> 'SKIP'
    action 'RSP' (noprec):   reduce Stm --> 'SKIP'
    action 'ITYP' (noprec):   reduce Stm --> 'SKIP'
    action 'BTYP' (noprec):   reduce Stm --> 'SKIP'
    action 'FTYP' (noprec):   reduce Stm --> 'SKIP'
    action 'NAME' (noprec):   reduce Stm --> 'SKIP'
    action 'STRING' (noprec):   reduce Stm --> 'SKIP'
    action 'BOOL' (noprec):   reduce Stm --> 'SKIP'
    action 'INT' (noprec):   reduce Stm --> 'SKIP'
    action 'error' (noprec):   reduce Stm --> 'SKIP'
    action '#' (noprec):   reduce Stm --> 'SKIP'
    action '$$' (noprec):   reduce Stm --> 'SKIP'
  immediate action:   reduce Stm --> 'SKIP'  gotos:state 64:  items:    Stm -> 'RET' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 65
state 65:  items:    Stm -> 'RET' Exp . 
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'RET' Exp
    action 'EOF' (noprec):   reduce Stm --> 'RET' Exp
    action 'PRINT' (noprec):   reduce Stm --> 'RET' Exp
    action 'ASG' (noprec):   reduce Stm --> 'RET' Exp
    action 'SKIP' (noprec):   reduce Stm --> 'RET' Exp
    action 'ABORT' (noprec):   reduce Stm --> 'RET' Exp
    action 'FUNC' (noprec):   reduce Stm --> 'RET' Exp
    action 'PROC' (noprec):   reduce Stm --> 'RET' Exp
    action 'NEG' (noprec):   reduce Stm --> 'RET' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   reduce Stm --> 'RET' Exp
    action 'COLON' (noprec):   reduce Stm --> 'RET' Exp
    action 'SEMI' (noprec):   reduce Stm --> 'RET' Exp
    action 'BAR' (noprec):   reduce Stm --> 'RET' Exp
    action 'TO' (noprec):   reduce Stm --> 'RET' Exp
    action 'IF' (noprec):   reduce Stm --> 'RET' Exp
    action 'FI' (noprec):   reduce Stm --> 'RET' Exp
    action 'DO' (noprec):   reduce Stm --> 'RET' Exp
    action 'OD' (noprec):   reduce Stm --> 'RET' Exp
    action 'BEGIN' (noprec):   reduce Stm --> 'RET' Exp
    action 'END' (noprec):   reduce Stm --> 'RET' Exp
    action 'RET' (noprec):   reduce Stm --> 'RET' Exp
    action 'LP' (noprec):   reduce Stm --> 'RET' Exp
    action 'LCP' (noprec):   reduce Stm --> 'RET' Exp
    action 'LSP' (noprec):   reduce Stm --> 'RET' Exp
    action 'RP' (noprec):   reduce Stm --> 'RET' Exp
    action 'RCP' (noprec):   reduce Stm --> 'RET' Exp
    action 'RSP' (noprec):   reduce Stm --> 'RET' Exp
    action 'ITYP' (noprec):   reduce Stm --> 'RET' Exp
    action 'BTYP' (noprec):   reduce Stm --> 'RET' Exp
    action 'FTYP' (noprec):   reduce Stm --> 'RET' Exp
    action 'NAME' (noprec):   reduce Stm --> 'RET' Exp
    action 'STRING' (noprec):   reduce Stm --> 'RET' Exp
    action 'BOOL' (noprec):   reduce Stm --> 'RET' Exp
    action 'INT' (noprec):   reduce Stm --> 'RET' Exp
    action 'error' (noprec):   reduce Stm --> 'RET' Exp
    action '#' (noprec):   reduce Stm --> 'RET' Exp
    action '$$' (noprec):   reduce Stm --> 'RET' Exp
  immediate action: <none>  gotos:state 66:  items:    Stm -> 'ABORT' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'ABORT'
    action 'EOF' (noprec):   reduce Stm --> 'ABORT'
    action 'PRINT' (noprec):   reduce Stm --> 'ABORT'
    action 'ASG' (noprec):   reduce Stm --> 'ABORT'
    action 'SKIP' (noprec):   reduce Stm --> 'ABORT'
    action 'ABORT' (noprec):   reduce Stm --> 'ABORT'
    action 'FUNC' (noprec):   reduce Stm --> 'ABORT'
    action 'PROC' (noprec):   reduce Stm --> 'ABORT'
    action 'NEG' (noprec):   reduce Stm --> 'ABORT'
    action 'PLUS' (noprec):   reduce Stm --> 'ABORT'
    action 'MINUS' (noprec):   reduce Stm --> 'ABORT'
    action 'TIMES' (noprec):   reduce Stm --> 'ABORT'
    action 'AND' (noprec):   reduce Stm --> 'ABORT'
    action 'EQ' (noprec):   reduce Stm --> 'ABORT'
    action 'LE' (noprec):   reduce Stm --> 'ABORT'
    action 'LT' (noprec):   reduce Stm --> 'ABORT'
    action 'GT' (noprec):   reduce Stm --> 'ABORT'
    action 'NEQ' (noprec):   reduce Stm --> 'ABORT'
    action 'COMMA' (noprec):   reduce Stm --> 'ABORT'
    action 'COLON' (noprec):   reduce Stm --> 'ABORT'
    action 'SEMI' (noprec):   reduce Stm --> 'ABORT'
    action 'BAR' (noprec):   reduce Stm --> 'ABORT'
    action 'TO' (noprec):   reduce Stm --> 'ABORT'
    action 'IF' (noprec):   reduce Stm --> 'ABORT'
    action 'FI' (noprec):   reduce Stm --> 'ABORT'
    action 'DO' (noprec):   reduce Stm --> 'ABORT'
    action 'OD' (noprec):   reduce Stm --> 'ABORT'
    action 'BEGIN' (noprec):   reduce Stm --> 'ABORT'
    action 'END' (noprec):   reduce Stm --> 'ABORT'
    action 'RET' (noprec):   reduce Stm --> 'ABORT'
    action 'LP' (noprec):   reduce Stm --> 'ABORT'
    action 'LCP' (noprec):   reduce Stm --> 'ABORT'
    action 'LSP' (noprec):   reduce Stm --> 'ABORT'
    action 'RP' (noprec):   reduce Stm --> 'ABORT'
    action 'RCP' (noprec):   reduce Stm --> 'ABORT'
    action 'RSP' (noprec):   reduce Stm --> 'ABORT'
    action 'ITYP' (noprec):   reduce Stm --> 'ABORT'
    action 'BTYP' (noprec):   reduce Stm --> 'ABORT'
    action 'FTYP' (noprec):   reduce Stm --> 'ABORT'
    action 'NAME' (noprec):   reduce Stm --> 'ABORT'
    action 'STRING' (noprec):   reduce Stm --> 'ABORT'
    action 'BOOL' (noprec):   reduce Stm --> 'ABORT'
    action 'INT' (noprec):   reduce Stm --> 'ABORT'
    action 'error' (noprec):   reduce Stm --> 'ABORT'
    action '#' (noprec):   reduce Stm --> 'ABORT'
    action '$$' (noprec):   reduce Stm --> 'ABORT'
  immediate action:   reduce Stm --> 'ABORT'  gotos:state 67:  items:    Stm -> 'LCP' . BDecList 'SEMI' StmL 'RCP'
    Stm -> 'LCP' . StmL 'RCP'
  actions:    action 'HIGH' (noprec):   reduce StmL --> 
    action 'EOF' (noprec):   reduce StmL --> 
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   reduce StmL --> 
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   reduce StmL --> 
    action 'PROC' (noprec):   reduce StmL --> 
    action 'NEG' (noprec):   reduce StmL --> 
    action 'PLUS' (noprec):   reduce StmL --> 
    action 'MINUS' (noprec):   reduce StmL --> 
    action 'TIMES' (noprec):   reduce StmL --> 
    action 'AND' (noprec):   reduce StmL --> 
    action 'EQ' (noprec):   reduce StmL --> 
    action 'LE' (noprec):   reduce StmL --> 
    action 'LT' (noprec):   reduce StmL --> 
    action 'GT' (noprec):   reduce StmL --> 
    action 'NEQ' (noprec):   reduce StmL --> 
    action 'COMMA' (noprec):   reduce StmL --> 
    action 'COLON' (noprec):   reduce StmL --> 
    action 'SEMI' (noprec):   reduce StmL --> 
    action 'BAR' (noprec):   reduce StmL --> 
    action 'TO' (noprec):   reduce StmL --> 
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   reduce StmL --> 
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   reduce StmL --> 
    action 'BEGIN' (noprec):   reduce StmL --> 
    action 'END' (noprec):   reduce StmL --> 
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   reduce StmL --> 
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   reduce StmL --> 
    action 'RP' (noprec):   reduce StmL --> 
    action 'RCP' (noprec):   reduce StmL --> 
    action 'RSP' (noprec):   reduce StmL --> 
    action 'ITYP' (noprec):   reduce StmL --> 
    action 'BTYP' (noprec):   reduce StmL --> 
    action 'FTYP' (noprec):   reduce StmL --> 
    action 'NAME' (noprec):   shift 19
    action 'STRING' (noprec):   reduce StmL --> 
    action 'BOOL' (noprec):   reduce StmL --> 
    action 'INT' (noprec):   reduce StmL --> 
    action 'error' (noprec):   reduce StmL --> 
    action '#' (noprec):   reduce StmL --> 
    action '$$' (noprec):   reduce StmL --> 
  immediate action: <none>  gotos:    goto Var: 86
    goto ArrayDec: 87
    goto Access: 60
    goto Stm: 89
    goto BDecList: 68
    goto BDec: 83
    goto StmL: 72
    goto StmList: 88
state 68:  items:    Stm -> 'LCP' BDecList . 'SEMI' StmL 'RCP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   shift 69
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 69:  items:    Stm -> 'LCP' BDecList 'SEMI' . StmL 'RCP'
  actions:    action 'HIGH' (noprec):   reduce StmL --> 
    action 'EOF' (noprec):   reduce StmL --> 
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   reduce StmL --> 
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   reduce StmL --> 
    action 'PROC' (noprec):   reduce StmL --> 
    action 'NEG' (noprec):   reduce StmL --> 
    action 'PLUS' (noprec):   reduce StmL --> 
    action 'MINUS' (noprec):   reduce StmL --> 
    action 'TIMES' (noprec):   reduce StmL --> 
    action 'AND' (noprec):   reduce StmL --> 
    action 'EQ' (noprec):   reduce StmL --> 
    action 'LE' (noprec):   reduce StmL --> 
    action 'LT' (noprec):   reduce StmL --> 
    action 'GT' (noprec):   reduce StmL --> 
    action 'NEQ' (noprec):   reduce StmL --> 
    action 'COMMA' (noprec):   reduce StmL --> 
    action 'COLON' (noprec):   reduce StmL --> 
    action 'SEMI' (noprec):   reduce StmL --> 
    action 'BAR' (noprec):   reduce StmL --> 
    action 'TO' (noprec):   reduce StmL --> 
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   reduce StmL --> 
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   reduce StmL --> 
    action 'BEGIN' (noprec):   reduce StmL --> 
    action 'END' (noprec):   reduce StmL --> 
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   reduce StmL --> 
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   reduce StmL --> 
    action 'RP' (noprec):   reduce StmL --> 
    action 'RCP' (noprec):   reduce StmL --> 
    action 'RSP' (noprec):   reduce StmL --> 
    action 'ITYP' (noprec):   reduce StmL --> 
    action 'BTYP' (noprec):   reduce StmL --> 
    action 'FTYP' (noprec):   reduce StmL --> 
    action 'NAME' (noprec):   shift 53
    action 'STRING' (noprec):   reduce StmL --> 
    action 'BOOL' (noprec):   reduce StmL --> 
    action 'INT' (noprec):   reduce StmL --> 
    action 'error' (noprec):   reduce StmL --> 
    action '#' (noprec):   reduce StmL --> 
    action '$$' (noprec):   reduce StmL --> 
  immediate action: <none>  gotos:    goto Access: 60
    goto Stm: 89
    goto StmL: 70
    goto StmList: 88
state 70:  items:    Stm -> 'LCP' BDecList 'SEMI' StmL . 'RCP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   shift 71
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 71:  items:    Stm -> 'LCP' BDecList 'SEMI' StmL 'RCP' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'EOF' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'PRINT' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'ASG' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'SKIP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'ABORT' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'FUNC' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'PROC' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'NEG' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'PLUS' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'MINUS' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'TIMES' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'AND' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'EQ' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'LE' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'LT' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'GT' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'NEQ' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'COMMA' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'COLON' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'SEMI' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'BAR' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'TO' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'IF' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'FI' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'DO' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'OD' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'BEGIN' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'END' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'RET' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'LP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'LCP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'LSP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'RP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'RCP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'RSP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'ITYP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'BTYP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'FTYP' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'NAME' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'STRING' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'BOOL' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'INT' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action 'error' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action '#' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
    action '$$' (noprec):   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'
  immediate action:   reduce Stm --> 'LCP' BDecList 'SEMI' StmL 'RCP'  gotos:state 72:  items:    Stm -> 'LCP' StmL . 'RCP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   shift 73
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 73:  items:    Stm -> 'LCP' StmL 'RCP' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'EOF' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'PRINT' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'ASG' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'SKIP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'ABORT' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'FUNC' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'PROC' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'NEG' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'PLUS' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'MINUS' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'TIMES' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'AND' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'EQ' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'LE' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'LT' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'GT' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'NEQ' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'COMMA' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'COLON' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'SEMI' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'BAR' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'TO' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'IF' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'FI' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'DO' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'OD' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'BEGIN' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'END' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'RET' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'LP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'LCP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'LSP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'RP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'RCP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'RSP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'ITYP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'BTYP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'FTYP' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'NAME' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'STRING' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'BOOL' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'INT' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action 'error' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action '#' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
    action '$$' (noprec):   reduce Stm --> 'LCP' StmL 'RCP'
  immediate action:   reduce Stm --> 'LCP' StmL 'RCP'  gotos:state 74:  items:    Stm -> 'IF' . GuardedCommand 'FI'
  actions:    action 'HIGH' (noprec):   reduce GuardedCommand --> 
    action 'EOF' (noprec):   reduce GuardedCommand --> 
    action 'PRINT' (noprec):   reduce GuardedCommand --> 
    action 'ASG' (noprec):   reduce GuardedCommand --> 
    action 'SKIP' (noprec):   reduce GuardedCommand --> 
    action 'ABORT' (noprec):   reduce GuardedCommand --> 
    action 'FUNC' (noprec):   reduce GuardedCommand --> 
    action 'PROC' (noprec):   reduce GuardedCommand --> 
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   reduce GuardedCommand --> 
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   reduce GuardedCommand --> 
    action 'AND' (noprec):   reduce GuardedCommand --> 
    action 'EQ' (noprec):   reduce GuardedCommand --> 
    action 'LE' (noprec):   reduce GuardedCommand --> 
    action 'LT' (noprec):   reduce GuardedCommand --> 
    action 'GT' (noprec):   reduce GuardedCommand --> 
    action 'NEQ' (noprec):   reduce GuardedCommand --> 
    action 'COMMA' (noprec):   reduce GuardedCommand --> 
    action 'COLON' (noprec):   reduce GuardedCommand --> 
    action 'SEMI' (noprec):   reduce GuardedCommand --> 
    action 'BAR' (noprec):   reduce GuardedCommand --> 
    action 'TO' (noprec):   reduce GuardedCommand --> 
    action 'IF' (noprec):   reduce GuardedCommand --> 
    action 'FI' (noprec):   reduce GuardedCommand --> 
    action 'DO' (noprec):   reduce GuardedCommand --> 
    action 'OD' (noprec):   reduce GuardedCommand --> 
    action 'BEGIN' (noprec):   reduce GuardedCommand --> 
    action 'END' (noprec):   reduce GuardedCommand --> 
    action 'RET' (noprec):   reduce GuardedCommand --> 
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   reduce GuardedCommand --> 
    action 'LSP' (noprec):   reduce GuardedCommand --> 
    action 'RP' (noprec):   reduce GuardedCommand --> 
    action 'RCP' (noprec):   reduce GuardedCommand --> 
    action 'RSP' (noprec):   reduce GuardedCommand --> 
    action 'ITYP' (noprec):   reduce GuardedCommand --> 
    action 'BTYP' (noprec):   reduce GuardedCommand --> 
    action 'FTYP' (noprec):   reduce GuardedCommand --> 
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   reduce GuardedCommand --> 
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   reduce GuardedCommand --> 
    action '#' (noprec):   reduce GuardedCommand --> 
    action '$$' (noprec):   reduce GuardedCommand --> 
  immediate action: <none>  gotos:    goto Access: 98
    goto GuardedCommand: 75
    goto GCList: 92
    goto Exp: 93
state 75:  items:    Stm -> 'IF' GuardedCommand . 'FI'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   shift 76
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 76:  items:    Stm -> 'IF' GuardedCommand 'FI' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'EOF' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'PRINT' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'ASG' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'SKIP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'ABORT' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'FUNC' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'PROC' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'NEG' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'PLUS' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'MINUS' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'TIMES' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'AND' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'EQ' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'LE' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'LT' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'GT' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'NEQ' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'COMMA' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'COLON' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'SEMI' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'BAR' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'TO' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'IF' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'FI' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'DO' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'OD' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'BEGIN' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'END' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'RET' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'LP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'LCP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'LSP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'RP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'RCP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'RSP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'ITYP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'BTYP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'FTYP' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'NAME' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'STRING' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'BOOL' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'INT' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action 'error' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action '#' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
    action '$$' (noprec):   reduce Stm --> 'IF' GuardedCommand 'FI'
  immediate action:   reduce Stm --> 'IF' GuardedCommand 'FI'  gotos:state 77:  items:    Stm -> 'DO' . GuardedCommand 'OD'
  actions:    action 'HIGH' (noprec):   reduce GuardedCommand --> 
    action 'EOF' (noprec):   reduce GuardedCommand --> 
    action 'PRINT' (noprec):   reduce GuardedCommand --> 
    action 'ASG' (noprec):   reduce GuardedCommand --> 
    action 'SKIP' (noprec):   reduce GuardedCommand --> 
    action 'ABORT' (noprec):   reduce GuardedCommand --> 
    action 'FUNC' (noprec):   reduce GuardedCommand --> 
    action 'PROC' (noprec):   reduce GuardedCommand --> 
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   reduce GuardedCommand --> 
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   reduce GuardedCommand --> 
    action 'AND' (noprec):   reduce GuardedCommand --> 
    action 'EQ' (noprec):   reduce GuardedCommand --> 
    action 'LE' (noprec):   reduce GuardedCommand --> 
    action 'LT' (noprec):   reduce GuardedCommand --> 
    action 'GT' (noprec):   reduce GuardedCommand --> 
    action 'NEQ' (noprec):   reduce GuardedCommand --> 
    action 'COMMA' (noprec):   reduce GuardedCommand --> 
    action 'COLON' (noprec):   reduce GuardedCommand --> 
    action 'SEMI' (noprec):   reduce GuardedCommand --> 
    action 'BAR' (noprec):   reduce GuardedCommand --> 
    action 'TO' (noprec):   reduce GuardedCommand --> 
    action 'IF' (noprec):   reduce GuardedCommand --> 
    action 'FI' (noprec):   reduce GuardedCommand --> 
    action 'DO' (noprec):   reduce GuardedCommand --> 
    action 'OD' (noprec):   reduce GuardedCommand --> 
    action 'BEGIN' (noprec):   reduce GuardedCommand --> 
    action 'END' (noprec):   reduce GuardedCommand --> 
    action 'RET' (noprec):   reduce GuardedCommand --> 
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   reduce GuardedCommand --> 
    action 'LSP' (noprec):   reduce GuardedCommand --> 
    action 'RP' (noprec):   reduce GuardedCommand --> 
    action 'RCP' (noprec):   reduce GuardedCommand --> 
    action 'RSP' (noprec):   reduce GuardedCommand --> 
    action 'ITYP' (noprec):   reduce GuardedCommand --> 
    action 'BTYP' (noprec):   reduce GuardedCommand --> 
    action 'FTYP' (noprec):   reduce GuardedCommand --> 
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   reduce GuardedCommand --> 
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   reduce GuardedCommand --> 
    action '#' (noprec):   reduce GuardedCommand --> 
    action '$$' (noprec):   reduce GuardedCommand --> 
  immediate action: <none>  gotos:    goto Access: 98
    goto GuardedCommand: 78
    goto GCList: 92
    goto Exp: 93
state 78:  items:    Stm -> 'DO' GuardedCommand . 'OD'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   shift 79
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 79:  items:    Stm -> 'DO' GuardedCommand 'OD' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'EOF' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'PRINT' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'ASG' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'SKIP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'ABORT' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'FUNC' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'PROC' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'NEG' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'PLUS' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'MINUS' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'TIMES' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'AND' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'EQ' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'LE' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'LT' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'GT' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'NEQ' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'COMMA' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'COLON' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'SEMI' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'BAR' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'TO' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'IF' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'FI' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'DO' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'OD' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'BEGIN' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'END' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'RET' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'LP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'LCP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'LSP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'RP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'RCP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'RSP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'ITYP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'BTYP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'FTYP' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'NAME' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'STRING' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'BOOL' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'INT' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action 'error' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action '#' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
    action '$$' (noprec):   reduce Stm --> 'DO' GuardedCommand 'OD'
  immediate action:   reduce Stm --> 'DO' GuardedCommand 'OD'  gotos:state 80:  items:    Stm -> 'NAME' 'LP' . ExpL 'RP'
  actions:    action 'HIGH' (noprec):   reduce ExpL --> 
    action 'EOF' (noprec):   reduce ExpL --> 
    action 'PRINT' (noprec):   reduce ExpL --> 
    action 'ASG' (noprec):   reduce ExpL --> 
    action 'SKIP' (noprec):   reduce ExpL --> 
    action 'ABORT' (noprec):   reduce ExpL --> 
    action 'FUNC' (noprec):   reduce ExpL --> 
    action 'PROC' (noprec):   reduce ExpL --> 
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   reduce ExpL --> 
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   reduce ExpL --> 
    action 'AND' (noprec):   reduce ExpL --> 
    action 'EQ' (noprec):   reduce ExpL --> 
    action 'LE' (noprec):   reduce ExpL --> 
    action 'LT' (noprec):   reduce ExpL --> 
    action 'GT' (noprec):   reduce ExpL --> 
    action 'NEQ' (noprec):   reduce ExpL --> 
    action 'COMMA' (noprec):   reduce ExpL --> 
    action 'COLON' (noprec):   reduce ExpL --> 
    action 'SEMI' (noprec):   reduce ExpL --> 
    action 'BAR' (noprec):   reduce ExpL --> 
    action 'TO' (noprec):   reduce ExpL --> 
    action 'IF' (noprec):   reduce ExpL --> 
    action 'FI' (noprec):   reduce ExpL --> 
    action 'DO' (noprec):   reduce ExpL --> 
    action 'OD' (noprec):   reduce ExpL --> 
    action 'BEGIN' (noprec):   reduce ExpL --> 
    action 'END' (noprec):   reduce ExpL --> 
    action 'RET' (noprec):   reduce ExpL --> 
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   reduce ExpL --> 
    action 'LSP' (noprec):   reduce ExpL --> 
    action 'RP' (noprec):   reduce ExpL --> 
    action 'RCP' (noprec):   reduce ExpL --> 
    action 'RSP' (noprec):   reduce ExpL --> 
    action 'ITYP' (noprec):   reduce ExpL --> 
    action 'BTYP' (noprec):   reduce ExpL --> 
    action 'FTYP' (noprec):   reduce ExpL --> 
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   reduce ExpL --> 
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   reduce ExpL --> 
    action '#' (noprec):   reduce ExpL --> 
    action '$$' (noprec):   reduce ExpL --> 
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 117
    goto ExpL: 81
    goto ExpList: 130
state 81:  items:    Stm -> 'NAME' 'LP' ExpL . 'RP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   shift 82
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 82:  items:    Stm -> 'NAME' 'LP' ExpL 'RP' . 
  actions:    action 'HIGH' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'EOF' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'PRINT' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'ASG' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'SKIP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'ABORT' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'FUNC' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'PROC' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'NEG' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'PLUS' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'MINUS' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'TIMES' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'AND' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'EQ' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'LE' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'LT' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'GT' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'NEQ' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'COMMA' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'COLON' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'SEMI' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'BAR' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'TO' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'IF' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'FI' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'DO' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'OD' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'BEGIN' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'END' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'RET' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'LP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'LCP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'LSP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'RP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'RCP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'RSP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'ITYP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'BTYP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'FTYP' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'NAME' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'STRING' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'BOOL' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'INT' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action 'error' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action '#' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
    action '$$' (noprec):   reduce Stm --> 'NAME' 'LP' ExpL 'RP'
  immediate action:   reduce Stm --> 'NAME' 'LP' ExpL 'RP'  gotos:state 83:  items:    BDecList -> BDec . 
    BDecList -> BDec . 'COMMA' BDecList
  actions:    action 'HIGH' (noprec):   reduce BDecList --> BDec
    action 'EOF' (noprec):   reduce BDecList --> BDec
    action 'PRINT' (noprec):   reduce BDecList --> BDec
    action 'ASG' (noprec):   reduce BDecList --> BDec
    action 'SKIP' (noprec):   reduce BDecList --> BDec
    action 'ABORT' (noprec):   reduce BDecList --> BDec
    action 'FUNC' (noprec):   reduce BDecList --> BDec
    action 'PROC' (noprec):   reduce BDecList --> BDec
    action 'NEG' (noprec):   reduce BDecList --> BDec
    action 'PLUS' (noprec):   reduce BDecList --> BDec
    action 'MINUS' (noprec):   reduce BDecList --> BDec
    action 'TIMES' (noprec):   reduce BDecList --> BDec
    action 'AND' (noprec):   reduce BDecList --> BDec
    action 'EQ' (noprec):   reduce BDecList --> BDec
    action 'LE' (noprec):   reduce BDecList --> BDec
    action 'LT' (noprec):   reduce BDecList --> BDec
    action 'GT' (noprec):   reduce BDecList --> BDec
    action 'NEQ' (noprec):   reduce BDecList --> BDec
    action 'COMMA' (noprec):   shift 84
    action 'COLON' (noprec):   reduce BDecList --> BDec
    action 'SEMI' (noprec):   reduce BDecList --> BDec
    action 'BAR' (noprec):   reduce BDecList --> BDec
    action 'TO' (noprec):   reduce BDecList --> BDec
    action 'IF' (noprec):   reduce BDecList --> BDec
    action 'FI' (noprec):   reduce BDecList --> BDec
    action 'DO' (noprec):   reduce BDecList --> BDec
    action 'OD' (noprec):   reduce BDecList --> BDec
    action 'BEGIN' (noprec):   reduce BDecList --> BDec
    action 'END' (noprec):   reduce BDecList --> BDec
    action 'RET' (noprec):   reduce BDecList --> BDec
    action 'LP' (noprec):   reduce BDecList --> BDec
    action 'LCP' (noprec):   reduce BDecList --> BDec
    action 'LSP' (noprec):   reduce BDecList --> BDec
    action 'RP' (noprec):   reduce BDecList --> BDec
    action 'RCP' (noprec):   reduce BDecList --> BDec
    action 'RSP' (noprec):   reduce BDecList --> BDec
    action 'ITYP' (noprec):   reduce BDecList --> BDec
    action 'BTYP' (noprec):   reduce BDecList --> BDec
    action 'FTYP' (noprec):   reduce BDecList --> BDec
    action 'NAME' (noprec):   reduce BDecList --> BDec
    action 'STRING' (noprec):   reduce BDecList --> BDec
    action 'BOOL' (noprec):   reduce BDecList --> BDec
    action 'INT' (noprec):   reduce BDecList --> BDec
    action 'error' (noprec):   reduce BDecList --> BDec
    action '#' (noprec):   reduce BDecList --> BDec
    action '$$' (noprec):   reduce BDecList --> BDec
  immediate action: <none>  gotos:state 84:  items:    BDecList -> BDec 'COMMA' . BDecList
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 18
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Var: 86
    goto ArrayDec: 87
    goto BDecList: 85
    goto BDec: 83
state 85:  items:    BDecList -> BDec 'COMMA' BDecList . 
  actions:    action 'HIGH' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'EOF' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'PRINT' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'ASG' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'SKIP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'ABORT' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'FUNC' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'PROC' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'NEG' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'PLUS' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'MINUS' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'TIMES' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'AND' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'EQ' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'LE' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'LT' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'GT' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'NEQ' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'COMMA' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'COLON' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'SEMI' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'BAR' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'TO' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'IF' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'FI' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'DO' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'OD' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'BEGIN' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'END' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'RET' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'LP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'LCP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'LSP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'RP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'RCP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'RSP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'ITYP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'BTYP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'FTYP' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'NAME' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'STRING' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'BOOL' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'INT' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action 'error' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action '#' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
    action '$$' (noprec):   reduce BDecList --> BDec 'COMMA' BDecList
  immediate action:   reduce BDecList --> BDec 'COMMA' BDecList  gotos:state 86:  items:    BDec -> Var . 
  actions:    action 'HIGH' (noprec):   reduce BDec --> Var
    action 'EOF' (noprec):   reduce BDec --> Var
    action 'PRINT' (noprec):   reduce BDec --> Var
    action 'ASG' (noprec):   reduce BDec --> Var
    action 'SKIP' (noprec):   reduce BDec --> Var
    action 'ABORT' (noprec):   reduce BDec --> Var
    action 'FUNC' (noprec):   reduce BDec --> Var
    action 'PROC' (noprec):   reduce BDec --> Var
    action 'NEG' (noprec):   reduce BDec --> Var
    action 'PLUS' (noprec):   reduce BDec --> Var
    action 'MINUS' (noprec):   reduce BDec --> Var
    action 'TIMES' (noprec):   reduce BDec --> Var
    action 'AND' (noprec):   reduce BDec --> Var
    action 'EQ' (noprec):   reduce BDec --> Var
    action 'LE' (noprec):   reduce BDec --> Var
    action 'LT' (noprec):   reduce BDec --> Var
    action 'GT' (noprec):   reduce BDec --> Var
    action 'NEQ' (noprec):   reduce BDec --> Var
    action 'COMMA' (noprec):   reduce BDec --> Var
    action 'COLON' (noprec):   reduce BDec --> Var
    action 'SEMI' (noprec):   reduce BDec --> Var
    action 'BAR' (noprec):   reduce BDec --> Var
    action 'TO' (noprec):   reduce BDec --> Var
    action 'IF' (noprec):   reduce BDec --> Var
    action 'FI' (noprec):   reduce BDec --> Var
    action 'DO' (noprec):   reduce BDec --> Var
    action 'OD' (noprec):   reduce BDec --> Var
    action 'BEGIN' (noprec):   reduce BDec --> Var
    action 'END' (noprec):   reduce BDec --> Var
    action 'RET' (noprec):   reduce BDec --> Var
    action 'LP' (noprec):   reduce BDec --> Var
    action 'LCP' (noprec):   reduce BDec --> Var
    action 'LSP' (noprec):   reduce BDec --> Var
    action 'RP' (noprec):   reduce BDec --> Var
    action 'RCP' (noprec):   reduce BDec --> Var
    action 'RSP' (noprec):   reduce BDec --> Var
    action 'ITYP' (noprec):   reduce BDec --> Var
    action 'BTYP' (noprec):   reduce BDec --> Var
    action 'FTYP' (noprec):   reduce BDec --> Var
    action 'NAME' (noprec):   reduce BDec --> Var
    action 'STRING' (noprec):   reduce BDec --> Var
    action 'BOOL' (noprec):   reduce BDec --> Var
    action 'INT' (noprec):   reduce BDec --> Var
    action 'error' (noprec):   reduce BDec --> Var
    action '#' (noprec):   reduce BDec --> Var
    action '$$' (noprec):   reduce BDec --> Var
  immediate action:   reduce BDec --> Var  gotos:state 87:  items:    BDec -> ArrayDec . 
  actions:    action 'HIGH' (noprec):   reduce BDec --> ArrayDec
    action 'EOF' (noprec):   reduce BDec --> ArrayDec
    action 'PRINT' (noprec):   reduce BDec --> ArrayDec
    action 'ASG' (noprec):   reduce BDec --> ArrayDec
    action 'SKIP' (noprec):   reduce BDec --> ArrayDec
    action 'ABORT' (noprec):   reduce BDec --> ArrayDec
    action 'FUNC' (noprec):   reduce BDec --> ArrayDec
    action 'PROC' (noprec):   reduce BDec --> ArrayDec
    action 'NEG' (noprec):   reduce BDec --> ArrayDec
    action 'PLUS' (noprec):   reduce BDec --> ArrayDec
    action 'MINUS' (noprec):   reduce BDec --> ArrayDec
    action 'TIMES' (noprec):   reduce BDec --> ArrayDec
    action 'AND' (noprec):   reduce BDec --> ArrayDec
    action 'EQ' (noprec):   reduce BDec --> ArrayDec
    action 'LE' (noprec):   reduce BDec --> ArrayDec
    action 'LT' (noprec):   reduce BDec --> ArrayDec
    action 'GT' (noprec):   reduce BDec --> ArrayDec
    action 'NEQ' (noprec):   reduce BDec --> ArrayDec
    action 'COMMA' (noprec):   reduce BDec --> ArrayDec
    action 'COLON' (noprec):   reduce BDec --> ArrayDec
    action 'SEMI' (noprec):   reduce BDec --> ArrayDec
    action 'BAR' (noprec):   reduce BDec --> ArrayDec
    action 'TO' (noprec):   reduce BDec --> ArrayDec
    action 'IF' (noprec):   reduce BDec --> ArrayDec
    action 'FI' (noprec):   reduce BDec --> ArrayDec
    action 'DO' (noprec):   reduce BDec --> ArrayDec
    action 'OD' (noprec):   reduce BDec --> ArrayDec
    action 'BEGIN' (noprec):   reduce BDec --> ArrayDec
    action 'END' (noprec):   reduce BDec --> ArrayDec
    action 'RET' (noprec):   reduce BDec --> ArrayDec
    action 'LP' (noprec):   reduce BDec --> ArrayDec
    action 'LCP' (noprec):   reduce BDec --> ArrayDec
    action 'LSP' (noprec):   reduce BDec --> ArrayDec
    action 'RP' (noprec):   reduce BDec --> ArrayDec
    action 'RCP' (noprec):   reduce BDec --> ArrayDec
    action 'RSP' (noprec):   reduce BDec --> ArrayDec
    action 'ITYP' (noprec):   reduce BDec --> ArrayDec
    action 'BTYP' (noprec):   reduce BDec --> ArrayDec
    action 'FTYP' (noprec):   reduce BDec --> ArrayDec
    action 'NAME' (noprec):   reduce BDec --> ArrayDec
    action 'STRING' (noprec):   reduce BDec --> ArrayDec
    action 'BOOL' (noprec):   reduce BDec --> ArrayDec
    action 'INT' (noprec):   reduce BDec --> ArrayDec
    action 'error' (noprec):   reduce BDec --> ArrayDec
    action '#' (noprec):   reduce BDec --> ArrayDec
    action '$$' (noprec):   reduce BDec --> ArrayDec
  immediate action:   reduce BDec --> ArrayDec  gotos:state 88:  items:    StmL -> StmList . 
  actions:    action 'HIGH' (noprec):   reduce StmL --> StmList
    action 'EOF' (noprec):   reduce StmL --> StmList
    action 'PRINT' (noprec):   reduce StmL --> StmList
    action 'ASG' (noprec):   reduce StmL --> StmList
    action 'SKIP' (noprec):   reduce StmL --> StmList
    action 'ABORT' (noprec):   reduce StmL --> StmList
    action 'FUNC' (noprec):   reduce StmL --> StmList
    action 'PROC' (noprec):   reduce StmL --> StmList
    action 'NEG' (noprec):   reduce StmL --> StmList
    action 'PLUS' (noprec):   reduce StmL --> StmList
    action 'MINUS' (noprec):   reduce StmL --> StmList
    action 'TIMES' (noprec):   reduce StmL --> StmList
    action 'AND' (noprec):   reduce StmL --> StmList
    action 'EQ' (noprec):   reduce StmL --> StmList
    action 'LE' (noprec):   reduce StmL --> StmList
    action 'LT' (noprec):   reduce StmL --> StmList
    action 'GT' (noprec):   reduce StmL --> StmList
    action 'NEQ' (noprec):   reduce StmL --> StmList
    action 'COMMA' (noprec):   reduce StmL --> StmList
    action 'COLON' (noprec):   reduce StmL --> StmList
    action 'SEMI' (noprec):   reduce StmL --> StmList
    action 'BAR' (noprec):   reduce StmL --> StmList
    action 'TO' (noprec):   reduce StmL --> StmList
    action 'IF' (noprec):   reduce StmL --> StmList
    action 'FI' (noprec):   reduce StmL --> StmList
    action 'DO' (noprec):   reduce StmL --> StmList
    action 'OD' (noprec):   reduce StmL --> StmList
    action 'BEGIN' (noprec):   reduce StmL --> StmList
    action 'END' (noprec):   reduce StmL --> StmList
    action 'RET' (noprec):   reduce StmL --> StmList
    action 'LP' (noprec):   reduce StmL --> StmList
    action 'LCP' (noprec):   reduce StmL --> StmList
    action 'LSP' (noprec):   reduce StmL --> StmList
    action 'RP' (noprec):   reduce StmL --> StmList
    action 'RCP' (noprec):   reduce StmL --> StmList
    action 'RSP' (noprec):   reduce StmL --> StmList
    action 'ITYP' (noprec):   reduce StmL --> StmList
    action 'BTYP' (noprec):   reduce StmL --> StmList
    action 'FTYP' (noprec):   reduce StmL --> StmList
    action 'NAME' (noprec):   reduce StmL --> StmList
    action 'STRING' (noprec):   reduce StmL --> StmList
    action 'BOOL' (noprec):   reduce StmL --> StmList
    action 'INT' (noprec):   reduce StmL --> StmList
    action 'error' (noprec):   reduce StmL --> StmList
    action '#' (noprec):   reduce StmL --> StmList
    action '$$' (noprec):   reduce StmL --> StmList
  immediate action:   reduce StmL --> StmList  gotos:state 89:  items:    StmList -> Stm . 
    StmList -> Stm . 'SEMI' StmList
  actions:    action 'HIGH' (noprec):   reduce StmList --> Stm
    action 'EOF' (noprec):   reduce StmList --> Stm
    action 'PRINT' (noprec):   reduce StmList --> Stm
    action 'ASG' (noprec):   reduce StmList --> Stm
    action 'SKIP' (noprec):   reduce StmList --> Stm
    action 'ABORT' (noprec):   reduce StmList --> Stm
    action 'FUNC' (noprec):   reduce StmList --> Stm
    action 'PROC' (noprec):   reduce StmList --> Stm
    action 'NEG' (noprec):   reduce StmList --> Stm
    action 'PLUS' (noprec):   reduce StmList --> Stm
    action 'MINUS' (noprec):   reduce StmList --> Stm
    action 'TIMES' (noprec):   reduce StmList --> Stm
    action 'AND' (noprec):   reduce StmList --> Stm
    action 'EQ' (noprec):   reduce StmList --> Stm
    action 'LE' (noprec):   reduce StmList --> Stm
    action 'LT' (noprec):   reduce StmList --> Stm
    action 'GT' (noprec):   reduce StmList --> Stm
    action 'NEQ' (noprec):   reduce StmList --> Stm
    action 'COMMA' (noprec):   reduce StmList --> Stm
    action 'COLON' (noprec):   reduce StmList --> Stm
    action 'SEMI' (noprec):   shift 90
    action 'BAR' (noprec):   reduce StmList --> Stm
    action 'TO' (noprec):   reduce StmList --> Stm
    action 'IF' (noprec):   reduce StmList --> Stm
    action 'FI' (noprec):   reduce StmList --> Stm
    action 'DO' (noprec):   reduce StmList --> Stm
    action 'OD' (noprec):   reduce StmList --> Stm
    action 'BEGIN' (noprec):   reduce StmList --> Stm
    action 'END' (noprec):   reduce StmList --> Stm
    action 'RET' (noprec):   reduce StmList --> Stm
    action 'LP' (noprec):   reduce StmList --> Stm
    action 'LCP' (noprec):   reduce StmList --> Stm
    action 'LSP' (noprec):   reduce StmList --> Stm
    action 'RP' (noprec):   reduce StmList --> Stm
    action 'RCP' (noprec):   reduce StmList --> Stm
    action 'RSP' (noprec):   reduce StmList --> Stm
    action 'ITYP' (noprec):   reduce StmList --> Stm
    action 'BTYP' (noprec):   reduce StmList --> Stm
    action 'FTYP' (noprec):   reduce StmList --> Stm
    action 'NAME' (noprec):   reduce StmList --> Stm
    action 'STRING' (noprec):   reduce StmList --> Stm
    action 'BOOL' (noprec):   reduce StmList --> Stm
    action 'INT' (noprec):   reduce StmList --> Stm
    action 'error' (noprec):   reduce StmList --> Stm
    action '#' (noprec):   reduce StmList --> Stm
    action '$$' (noprec):   reduce StmList --> Stm
  immediate action: <none>  gotos:state 90:  items:    StmList -> Stm 'SEMI' . StmList
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   error
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 53
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 60
    goto Stm: 89
    goto StmList: 91
state 91:  items:    StmList -> Stm 'SEMI' StmList . 
  actions:    action 'HIGH' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'EOF' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'PRINT' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'ASG' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'SKIP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'ABORT' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'FUNC' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'PROC' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'NEG' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'PLUS' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'MINUS' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'TIMES' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'AND' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'EQ' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'LE' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'LT' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'GT' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'NEQ' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'COMMA' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'COLON' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'SEMI' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'BAR' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'TO' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'IF' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'FI' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'DO' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'OD' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'BEGIN' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'END' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'RET' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'LP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'LCP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'LSP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'RP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'RCP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'RSP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'ITYP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'BTYP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'FTYP' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'NAME' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'STRING' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'BOOL' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'INT' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action 'error' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action '#' (noprec):   reduce StmList --> Stm 'SEMI' StmList
    action '$$' (noprec):   reduce StmList --> Stm 'SEMI' StmList
  immediate action:   reduce StmList --> Stm 'SEMI' StmList  gotos:state 92:  items:    GuardedCommand -> GCList . 
  actions:    action 'HIGH' (noprec):   reduce GuardedCommand --> GCList
    action 'EOF' (noprec):   reduce GuardedCommand --> GCList
    action 'PRINT' (noprec):   reduce GuardedCommand --> GCList
    action 'ASG' (noprec):   reduce GuardedCommand --> GCList
    action 'SKIP' (noprec):   reduce GuardedCommand --> GCList
    action 'ABORT' (noprec):   reduce GuardedCommand --> GCList
    action 'FUNC' (noprec):   reduce GuardedCommand --> GCList
    action 'PROC' (noprec):   reduce GuardedCommand --> GCList
    action 'NEG' (noprec):   reduce GuardedCommand --> GCList
    action 'PLUS' (noprec):   reduce GuardedCommand --> GCList
    action 'MINUS' (noprec):   reduce GuardedCommand --> GCList
    action 'TIMES' (noprec):   reduce GuardedCommand --> GCList
    action 'AND' (noprec):   reduce GuardedCommand --> GCList
    action 'EQ' (noprec):   reduce GuardedCommand --> GCList
    action 'LE' (noprec):   reduce GuardedCommand --> GCList
    action 'LT' (noprec):   reduce GuardedCommand --> GCList
    action 'GT' (noprec):   reduce GuardedCommand --> GCList
    action 'NEQ' (noprec):   reduce GuardedCommand --> GCList
    action 'COMMA' (noprec):   reduce GuardedCommand --> GCList
    action 'COLON' (noprec):   reduce GuardedCommand --> GCList
    action 'SEMI' (noprec):   reduce GuardedCommand --> GCList
    action 'BAR' (noprec):   reduce GuardedCommand --> GCList
    action 'TO' (noprec):   reduce GuardedCommand --> GCList
    action 'IF' (noprec):   reduce GuardedCommand --> GCList
    action 'FI' (noprec):   reduce GuardedCommand --> GCList
    action 'DO' (noprec):   reduce GuardedCommand --> GCList
    action 'OD' (noprec):   reduce GuardedCommand --> GCList
    action 'BEGIN' (noprec):   reduce GuardedCommand --> GCList
    action 'END' (noprec):   reduce GuardedCommand --> GCList
    action 'RET' (noprec):   reduce GuardedCommand --> GCList
    action 'LP' (noprec):   reduce GuardedCommand --> GCList
    action 'LCP' (noprec):   reduce GuardedCommand --> GCList
    action 'LSP' (noprec):   reduce GuardedCommand --> GCList
    action 'RP' (noprec):   reduce GuardedCommand --> GCList
    action 'RCP' (noprec):   reduce GuardedCommand --> GCList
    action 'RSP' (noprec):   reduce GuardedCommand --> GCList
    action 'ITYP' (noprec):   reduce GuardedCommand --> GCList
    action 'BTYP' (noprec):   reduce GuardedCommand --> GCList
    action 'FTYP' (noprec):   reduce GuardedCommand --> GCList
    action 'NAME' (noprec):   reduce GuardedCommand --> GCList
    action 'STRING' (noprec):   reduce GuardedCommand --> GCList
    action 'BOOL' (noprec):   reduce GuardedCommand --> GCList
    action 'INT' (noprec):   reduce GuardedCommand --> GCList
    action 'error' (noprec):   reduce GuardedCommand --> GCList
    action '#' (noprec):   reduce GuardedCommand --> GCList
    action '$$' (noprec):   reduce GuardedCommand --> GCList
  immediate action:   reduce GuardedCommand --> GCList  gotos:state 93:  items:    GCList -> Exp . 'TO' StmL
    GCList -> Exp . 'TO' StmL 'BAR' GCList
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   shift 94
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 94:  items:    GCList -> Exp 'TO' . StmL
    GCList -> Exp 'TO' . StmL 'BAR' GCList
  actions:    action 'HIGH' (noprec):   reduce StmL --> 
    action 'EOF' (noprec):   reduce StmL --> 
    action 'PRINT' (noprec):   shift 58
    action 'ASG' (noprec):   reduce StmL --> 
    action 'SKIP' (noprec):   shift 63
    action 'ABORT' (noprec):   shift 66
    action 'FUNC' (noprec):   reduce StmL --> 
    action 'PROC' (noprec):   reduce StmL --> 
    action 'NEG' (noprec):   reduce StmL --> 
    action 'PLUS' (noprec):   reduce StmL --> 
    action 'MINUS' (noprec):   reduce StmL --> 
    action 'TIMES' (noprec):   reduce StmL --> 
    action 'AND' (noprec):   reduce StmL --> 
    action 'EQ' (noprec):   reduce StmL --> 
    action 'LE' (noprec):   reduce StmL --> 
    action 'LT' (noprec):   reduce StmL --> 
    action 'GT' (noprec):   reduce StmL --> 
    action 'NEQ' (noprec):   reduce StmL --> 
    action 'COMMA' (noprec):   reduce StmL --> 
    action 'COLON' (noprec):   reduce StmL --> 
    action 'SEMI' (noprec):   reduce StmL --> 
    action 'BAR' (noprec):   reduce StmL --> 
    action 'TO' (noprec):   reduce StmL --> 
    action 'IF' (noprec):   shift 74
    action 'FI' (noprec):   reduce StmL --> 
    action 'DO' (noprec):   shift 77
    action 'OD' (noprec):   reduce StmL --> 
    action 'BEGIN' (noprec):   reduce StmL --> 
    action 'END' (noprec):   reduce StmL --> 
    action 'RET' (noprec):   shift 64
    action 'LP' (noprec):   reduce StmL --> 
    action 'LCP' (noprec):   shift 67
    action 'LSP' (noprec):   reduce StmL --> 
    action 'RP' (noprec):   reduce StmL --> 
    action 'RCP' (noprec):   reduce StmL --> 
    action 'RSP' (noprec):   reduce StmL --> 
    action 'ITYP' (noprec):   reduce StmL --> 
    action 'BTYP' (noprec):   reduce StmL --> 
    action 'FTYP' (noprec):   reduce StmL --> 
    action 'NAME' (noprec):   shift 53
    action 'STRING' (noprec):   reduce StmL --> 
    action 'BOOL' (noprec):   reduce StmL --> 
    action 'INT' (noprec):   reduce StmL --> 
    action 'error' (noprec):   reduce StmL --> 
    action '#' (noprec):   reduce StmL --> 
    action '$$' (noprec):   reduce StmL --> 
  immediate action: <none>  gotos:    goto Access: 60
    goto Stm: 89
    goto StmL: 95
    goto StmList: 88
state 95:  items:    GCList -> Exp 'TO' StmL . 
    GCList -> Exp 'TO' StmL . 'BAR' GCList
  actions:    action 'HIGH' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'EOF' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'PRINT' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'ASG' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'SKIP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'ABORT' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'FUNC' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'PROC' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'NEG' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'PLUS' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'MINUS' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'TIMES' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'AND' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'EQ' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'LE' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'LT' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'GT' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'NEQ' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'COMMA' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'COLON' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'SEMI' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'BAR' (noprec):   shift 96
    action 'TO' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'IF' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'FI' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'DO' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'OD' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'BEGIN' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'END' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'RET' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'LP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'LCP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'LSP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'RP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'RCP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'RSP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'ITYP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'BTYP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'FTYP' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'NAME' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'STRING' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'BOOL' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'INT' (noprec):   reduce GCList --> Exp 'TO' StmL
    action 'error' (noprec):   reduce GCList --> Exp 'TO' StmL
    action '#' (noprec):   reduce GCList --> Exp 'TO' StmL
    action '$$' (noprec):   reduce GCList --> Exp 'TO' StmL
  immediate action: <none>  gotos:state 96:  items:    GCList -> Exp 'TO' StmL 'BAR' . GCList
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto GCList: 97
    goto Exp: 93
state 97:  items:    GCList -> Exp 'TO' StmL 'BAR' GCList . 
  actions:    action 'HIGH' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'EOF' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'PRINT' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'ASG' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'SKIP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'ABORT' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'FUNC' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'PROC' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'NEG' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'PLUS' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'MINUS' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'TIMES' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'AND' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'EQ' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'LE' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'LT' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'GT' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'NEQ' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'COMMA' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'COLON' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'SEMI' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'BAR' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'TO' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'IF' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'FI' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'DO' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'OD' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'BEGIN' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'END' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'RET' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'LP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'LCP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'LSP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'RP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'RCP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'RSP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'ITYP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'BTYP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'FTYP' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'NAME' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'STRING' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'BOOL' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'INT' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action 'error' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action '#' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
    action '$$' (noprec):   reduce GCList --> Exp 'TO' StmL 'BAR' GCList
  immediate action:   reduce GCList --> Exp 'TO' StmL 'BAR' GCList  gotos:state 98:  items:    Exp -> Access . 
  actions:    action 'HIGH' (noprec):   reduce Exp --> Access
    action 'EOF' (noprec):   reduce Exp --> Access
    action 'PRINT' (noprec):   reduce Exp --> Access
    action 'ASG' (noprec):   reduce Exp --> Access
    action 'SKIP' (noprec):   reduce Exp --> Access
    action 'ABORT' (noprec):   reduce Exp --> Access
    action 'FUNC' (noprec):   reduce Exp --> Access
    action 'PROC' (noprec):   reduce Exp --> Access
    action 'NEG' (noprec):   reduce Exp --> Access
    action 'PLUS' (noprec):   reduce Exp --> Access
    action 'MINUS' (noprec):   reduce Exp --> Access
    action 'TIMES' (noprec):   reduce Exp --> Access
    action 'AND' (noprec):   reduce Exp --> Access
    action 'EQ' (noprec):   reduce Exp --> Access
    action 'LE' (noprec):   reduce Exp --> Access
    action 'LT' (noprec):   reduce Exp --> Access
    action 'GT' (noprec):   reduce Exp --> Access
    action 'NEQ' (noprec):   reduce Exp --> Access
    action 'COMMA' (noprec):   reduce Exp --> Access
    action 'COLON' (noprec):   reduce Exp --> Access
    action 'SEMI' (noprec):   reduce Exp --> Access
    action 'BAR' (noprec):   reduce Exp --> Access
    action 'TO' (noprec):   reduce Exp --> Access
    action 'IF' (noprec):   reduce Exp --> Access
    action 'FI' (noprec):   reduce Exp --> Access
    action 'DO' (noprec):   reduce Exp --> Access
    action 'OD' (noprec):   reduce Exp --> Access
    action 'BEGIN' (noprec):   reduce Exp --> Access
    action 'END' (noprec):   reduce Exp --> Access
    action 'RET' (noprec):   reduce Exp --> Access
    action 'LP' (noprec):   reduce Exp --> Access
    action 'LCP' (noprec):   reduce Exp --> Access
    action 'LSP' (noprec):   reduce Exp --> Access
    action 'RP' (noprec):   reduce Exp --> Access
    action 'RCP' (noprec):   reduce Exp --> Access
    action 'RSP' (noprec):   reduce Exp --> Access
    action 'ITYP' (noprec):   reduce Exp --> Access
    action 'BTYP' (noprec):   reduce Exp --> Access
    action 'FTYP' (noprec):   reduce Exp --> Access
    action 'NAME' (noprec):   reduce Exp --> Access
    action 'STRING' (noprec):   reduce Exp --> Access
    action 'BOOL' (noprec):   reduce Exp --> Access
    action 'INT' (noprec):   reduce Exp --> Access
    action 'error' (noprec):   reduce Exp --> Access
    action '#' (noprec):   reduce Exp --> Access
    action '$$' (noprec):   reduce Exp --> Access
  immediate action:   reduce Exp --> Access  gotos:state 99:  items:    Exp -> 'INT' . 
  actions:    action 'HIGH' (noprec):   reduce Exp --> 'INT'
    action 'EOF' (noprec):   reduce Exp --> 'INT'
    action 'PRINT' (noprec):   reduce Exp --> 'INT'
    action 'ASG' (noprec):   reduce Exp --> 'INT'
    action 'SKIP' (noprec):   reduce Exp --> 'INT'
    action 'ABORT' (noprec):   reduce Exp --> 'INT'
    action 'FUNC' (noprec):   reduce Exp --> 'INT'
    action 'PROC' (noprec):   reduce Exp --> 'INT'
    action 'NEG' (noprec):   reduce Exp --> 'INT'
    action 'PLUS' (noprec):   reduce Exp --> 'INT'
    action 'MINUS' (noprec):   reduce Exp --> 'INT'
    action 'TIMES' (noprec):   reduce Exp --> 'INT'
    action 'AND' (noprec):   reduce Exp --> 'INT'
    action 'EQ' (noprec):   reduce Exp --> 'INT'
    action 'LE' (noprec):   reduce Exp --> 'INT'
    action 'LT' (noprec):   reduce Exp --> 'INT'
    action 'GT' (noprec):   reduce Exp --> 'INT'
    action 'NEQ' (noprec):   reduce Exp --> 'INT'
    action 'COMMA' (noprec):   reduce Exp --> 'INT'
    action 'COLON' (noprec):   reduce Exp --> 'INT'
    action 'SEMI' (noprec):   reduce Exp --> 'INT'
    action 'BAR' (noprec):   reduce Exp --> 'INT'
    action 'TO' (noprec):   reduce Exp --> 'INT'
    action 'IF' (noprec):   reduce Exp --> 'INT'
    action 'FI' (noprec):   reduce Exp --> 'INT'
    action 'DO' (noprec):   reduce Exp --> 'INT'
    action 'OD' (noprec):   reduce Exp --> 'INT'
    action 'BEGIN' (noprec):   reduce Exp --> 'INT'
    action 'END' (noprec):   reduce Exp --> 'INT'
    action 'RET' (noprec):   reduce Exp --> 'INT'
    action 'LP' (noprec):   reduce Exp --> 'INT'
    action 'LCP' (noprec):   reduce Exp --> 'INT'
    action 'LSP' (noprec):   reduce Exp --> 'INT'
    action 'RP' (noprec):   reduce Exp --> 'INT'
    action 'RCP' (noprec):   reduce Exp --> 'INT'
    action 'RSP' (noprec):   reduce Exp --> 'INT'
    action 'ITYP' (noprec):   reduce Exp --> 'INT'
    action 'BTYP' (noprec):   reduce Exp --> 'INT'
    action 'FTYP' (noprec):   reduce Exp --> 'INT'
    action 'NAME' (noprec):   reduce Exp --> 'INT'
    action 'STRING' (noprec):   reduce Exp --> 'INT'
    action 'BOOL' (noprec):   reduce Exp --> 'INT'
    action 'INT' (noprec):   reduce Exp --> 'INT'
    action 'error' (noprec):   reduce Exp --> 'INT'
    action '#' (noprec):   reduce Exp --> 'INT'
    action '$$' (noprec):   reduce Exp --> 'INT'
  immediate action:   reduce Exp --> 'INT'  gotos:state 100:  items:    Exp -> 'BOOL' . 
  actions:    action 'HIGH' (noprec):   reduce Exp --> 'BOOL'
    action 'EOF' (noprec):   reduce Exp --> 'BOOL'
    action 'PRINT' (noprec):   reduce Exp --> 'BOOL'
    action 'ASG' (noprec):   reduce Exp --> 'BOOL'
    action 'SKIP' (noprec):   reduce Exp --> 'BOOL'
    action 'ABORT' (noprec):   reduce Exp --> 'BOOL'
    action 'FUNC' (noprec):   reduce Exp --> 'BOOL'
    action 'PROC' (noprec):   reduce Exp --> 'BOOL'
    action 'NEG' (noprec):   reduce Exp --> 'BOOL'
    action 'PLUS' (noprec):   reduce Exp --> 'BOOL'
    action 'MINUS' (noprec):   reduce Exp --> 'BOOL'
    action 'TIMES' (noprec):   reduce Exp --> 'BOOL'
    action 'AND' (noprec):   reduce Exp --> 'BOOL'
    action 'EQ' (noprec):   reduce Exp --> 'BOOL'
    action 'LE' (noprec):   reduce Exp --> 'BOOL'
    action 'LT' (noprec):   reduce Exp --> 'BOOL'
    action 'GT' (noprec):   reduce Exp --> 'BOOL'
    action 'NEQ' (noprec):   reduce Exp --> 'BOOL'
    action 'COMMA' (noprec):   reduce Exp --> 'BOOL'
    action 'COLON' (noprec):   reduce Exp --> 'BOOL'
    action 'SEMI' (noprec):   reduce Exp --> 'BOOL'
    action 'BAR' (noprec):   reduce Exp --> 'BOOL'
    action 'TO' (noprec):   reduce Exp --> 'BOOL'
    action 'IF' (noprec):   reduce Exp --> 'BOOL'
    action 'FI' (noprec):   reduce Exp --> 'BOOL'
    action 'DO' (noprec):   reduce Exp --> 'BOOL'
    action 'OD' (noprec):   reduce Exp --> 'BOOL'
    action 'BEGIN' (noprec):   reduce Exp --> 'BOOL'
    action 'END' (noprec):   reduce Exp --> 'BOOL'
    action 'RET' (noprec):   reduce Exp --> 'BOOL'
    action 'LP' (noprec):   reduce Exp --> 'BOOL'
    action 'LCP' (noprec):   reduce Exp --> 'BOOL'
    action 'LSP' (noprec):   reduce Exp --> 'BOOL'
    action 'RP' (noprec):   reduce Exp --> 'BOOL'
    action 'RCP' (noprec):   reduce Exp --> 'BOOL'
    action 'RSP' (noprec):   reduce Exp --> 'BOOL'
    action 'ITYP' (noprec):   reduce Exp --> 'BOOL'
    action 'BTYP' (noprec):   reduce Exp --> 'BOOL'
    action 'FTYP' (noprec):   reduce Exp --> 'BOOL'
    action 'NAME' (noprec):   reduce Exp --> 'BOOL'
    action 'STRING' (noprec):   reduce Exp --> 'BOOL'
    action 'BOOL' (noprec):   reduce Exp --> 'BOOL'
    action 'INT' (noprec):   reduce Exp --> 'BOOL'
    action 'error' (noprec):   reduce Exp --> 'BOOL'
    action '#' (noprec):   reduce Exp --> 'BOOL'
    action '$$' (noprec):   reduce Exp --> 'BOOL'
  immediate action:   reduce Exp --> 'BOOL'  gotos:state 101:  items:    Exp -> 'LP' . Exp 'RP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 102
state 102:  items:    Exp -> 'LP' Exp . 'RP'
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   shift 103
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 103:  items:    Exp -> 'LP' Exp 'RP' . 
  actions:    action 'HIGH' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'EOF' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'PRINT' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'ASG' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'SKIP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'ABORT' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'FUNC' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'PROC' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'NEG' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'PLUS' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'MINUS' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'TIMES' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'AND' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'EQ' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'LE' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'LT' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'GT' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'NEQ' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'COMMA' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'COLON' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'SEMI' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'BAR' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'TO' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'IF' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'FI' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'DO' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'OD' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'BEGIN' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'END' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'RET' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'LP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'LCP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'LSP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'RP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'RCP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'RSP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'ITYP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'BTYP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'FTYP' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'NAME' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'STRING' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'BOOL' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'INT' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action 'error' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action '#' (noprec):   reduce Exp --> 'LP' Exp 'RP'
    action '$$' (noprec):   reduce Exp --> 'LP' Exp 'RP'
  immediate action:   reduce Exp --> 'LP' Exp 'RP'  gotos:state 104:  items:    Exp -> 'MINUS' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 105
state 105:  items:    Exp -> 'MINUS' Exp . 
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'EOF' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'PRINT' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'ASG' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'SKIP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'ABORT' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'FUNC' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'PROC' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'NEG' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'PLUS' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'MINUS' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'EQ' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'LE' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'LT' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'GT' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'NEQ' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'COMMA' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'COLON' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'SEMI' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'BAR' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'TO' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'IF' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'FI' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'DO' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'OD' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'BEGIN' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'END' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'RET' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'LP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'LCP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'LSP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'RP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'RCP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'RSP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'ITYP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'BTYP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'FTYP' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'NAME' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'STRING' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'BOOL' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'INT' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action 'error' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action '#' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
    action '$$' (explicit left 9999):   reduce Exp --> 'MINUS' Exp
  immediate action: <none>  gotos:state 106:  items:    Exp -> 'NEG' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 107
state 107:  items:    Exp -> 'NEG' Exp . 
    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'EOF' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'PRINT' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'ASG' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'SKIP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'ABORT' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'FUNC' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'PROC' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'NEG' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'COLON' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'SEMI' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'BAR' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'TO' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'IF' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'FI' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'DO' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'OD' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'BEGIN' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'END' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'RET' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'LP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'LCP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'LSP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'RP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'RCP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'RSP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'ITYP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'BTYP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'FTYP' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'NAME' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'STRING' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'BOOL' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'INT' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action 'error' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action '#' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
    action '$$' (explicit nonassoc 9997):   reduce Exp --> 'NEG' Exp
  immediate action: <none>  gotos:state 108:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp 'TIMES' Exp . 
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'EOF' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'PRINT' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'ASG' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'SKIP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'ABORT' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'FUNC' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'PROC' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'NEG' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'PLUS' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'MINUS' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'TIMES' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'AND' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'EQ' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'LE' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'LT' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'GT' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'NEQ' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'COMMA' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'COLON' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'SEMI' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'BAR' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'TO' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'IF' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'FI' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'DO' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'OD' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'BEGIN' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'END' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'RET' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'LP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'LCP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'LSP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'RP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'RCP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'RSP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'ITYP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'BTYP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'FTYP' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'NAME' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'STRING' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'BOOL' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'INT' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action 'error' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action '#' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
    action '$$' (explicit left 10000):   reduce Exp --> Exp 'TIMES' Exp
  immediate action: <none>  gotos:state 109:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp 'PLUS' Exp . 
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'EOF' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'PRINT' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'ASG' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'SKIP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'ABORT' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'FUNC' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'PROC' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'NEG' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'PLUS' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'MINUS' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'EQ' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'LE' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'LT' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'GT' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'NEQ' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'COMMA' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'COLON' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'SEMI' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'BAR' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'TO' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'IF' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'FI' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'DO' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'OD' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'BEGIN' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'END' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'RET' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'LP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'LCP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'LSP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'RP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'RCP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'RSP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'ITYP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'BTYP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'FTYP' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'NAME' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'STRING' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'BOOL' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'INT' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action 'error' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action '#' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
    action '$$' (explicit left 9999):   reduce Exp --> Exp 'PLUS' Exp
  immediate action: <none>  gotos:state 110:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp 'MINUS' Exp . 
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'EOF' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'PRINT' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'ASG' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'SKIP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'ABORT' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'FUNC' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'PROC' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'NEG' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'PLUS' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'MINUS' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'EQ' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'LE' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'LT' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'GT' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'NEQ' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'COMMA' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'COLON' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'SEMI' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'BAR' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'TO' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'IF' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'FI' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'DO' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'OD' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'BEGIN' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'END' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'RET' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'LP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'LCP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'LSP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'RP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'RCP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'RSP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'ITYP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'BTYP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'FTYP' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'NAME' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'STRING' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'BOOL' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'INT' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action 'error' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action '#' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
    action '$$' (explicit left 9999):   reduce Exp --> Exp 'MINUS' Exp
  immediate action: <none>  gotos:state 111:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp 'AND' Exp . 
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'EOF' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'PRINT' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'ASG' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'SKIP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'ABORT' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'FUNC' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'PROC' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'NEG' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'COLON' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'SEMI' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'BAR' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'TO' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'IF' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'FI' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'DO' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'OD' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'BEGIN' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'END' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'RET' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'LP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'LCP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'LSP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'RP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'RCP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'RSP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'ITYP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'BTYP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'FTYP' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'NAME' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'STRING' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'BOOL' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'INT' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action 'error' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action '#' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
    action '$$' (explicit left 9996):   reduce Exp --> Exp 'AND' Exp
  immediate action: <none>  gotos:state 112:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp 'EQ' Exp . 
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'PRINT' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'ASG' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'SKIP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'ABORT' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'FUNC' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'PROC' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'NEG' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'NEQ' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'BAR' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'TO' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'FI' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'DO' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'OD' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'BEGIN' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'END' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'LP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'LCP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'LSP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'RP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'RCP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'RSP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'ITYP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'BTYP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'FTYP' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'NAME' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'STRING' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'EQ' Exp
  immediate action: <none>  gotos:state 113:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp 'LE' Exp . 
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'PRINT' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'ASG' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'SKIP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'ABORT' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'FUNC' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'PROC' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'NEG' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'NEQ' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'BAR' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'TO' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'FI' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'DO' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'OD' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'BEGIN' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'END' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'LP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'LCP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'LSP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'RP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'RCP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'RSP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'ITYP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'BTYP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'FTYP' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'NAME' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'STRING' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'LE' Exp
  immediate action: <none>  gotos:state 114:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp 'GT' Exp . 
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'PRINT' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'ASG' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'SKIP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'ABORT' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'FUNC' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'PROC' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'NEG' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'NEQ' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'BAR' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'TO' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'FI' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'DO' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'OD' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'BEGIN' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'END' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'LP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'LCP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'LSP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'RP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'RCP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'RSP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'ITYP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'BTYP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'FTYP' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'NAME' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'STRING' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'GT' Exp
  immediate action: <none>  gotos:state 115:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp 'LT' Exp . 
    Exp -> Exp . 'NEQ' Exp
  actions:    action 'HIGH' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'PRINT' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'ASG' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'SKIP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'ABORT' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'FUNC' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'PROC' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'NEG' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'NEQ' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'BAR' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'TO' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'FI' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'DO' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'OD' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'BEGIN' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'END' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'LP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'LCP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'LSP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'RP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'RCP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'RSP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'ITYP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'BTYP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'FTYP' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'NAME' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'STRING' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'LT' Exp
  immediate action: <none>  gotos:state 116:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
    Exp -> Exp 'NEQ' Exp . 
  actions:    action 'HIGH' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'EOF' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'PRINT' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'ASG' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'SKIP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'ABORT' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'FUNC' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'PROC' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'NEG' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'EQ' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'LE' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'LT' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'GT' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'NEQ' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'COMMA' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'COLON' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'SEMI' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'BAR' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'TO' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'IF' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'FI' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'DO' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'OD' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'BEGIN' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'END' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'RET' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'LP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'LCP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'LSP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'RP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'RCP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'RSP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'ITYP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'BTYP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'FTYP' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'NAME' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'STRING' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'BOOL' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'INT' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action 'error' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action '#' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
    action '$$' (explicit left 9998):   reduce Exp --> Exp 'NEQ' Exp
  immediate action: <none>  gotos:state 117:  items:    Exp -> Exp . 'TIMES' Exp
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'EQ' Exp
    Exp -> Exp . 'LE' Exp
    Exp -> Exp . 'GT' Exp
    Exp -> Exp . 'LT' Exp
    Exp -> Exp . 'NEQ' Exp
    ExpList -> Exp . 
    ExpList -> Exp . 'COMMA' ExpList
  actions:    action 'HIGH' (noprec):   reduce ExpList --> Exp
    action 'EOF' (noprec):   reduce ExpList --> Exp
    action 'PRINT' (noprec):   reduce ExpList --> Exp
    action 'ASG' (noprec):   reduce ExpList --> Exp
    action 'SKIP' (noprec):   reduce ExpList --> Exp
    action 'ABORT' (noprec):   reduce ExpList --> Exp
    action 'FUNC' (noprec):   reduce ExpList --> Exp
    action 'PROC' (noprec):   reduce ExpList --> Exp
    action 'NEG' (noprec):   reduce ExpList --> Exp
    action 'PLUS' (explicit left 9999):   shift 119
    action 'MINUS' (explicit left 9999):   shift 120
    action 'TIMES' (explicit left 10000):   shift 118
    action 'AND' (explicit left 9996):   shift 121
    action 'EQ' (explicit left 9998):   shift 122
    action 'LE' (explicit left 9998):   shift 123
    action 'LT' (explicit left 9998):   shift 125
    action 'GT' (explicit left 9998):   shift 124
    action 'NEQ' (explicit left 9998):   shift 126
    action 'COMMA' (noprec):   shift 131
    action 'COLON' (noprec):   reduce ExpList --> Exp
    action 'SEMI' (noprec):   reduce ExpList --> Exp
    action 'BAR' (noprec):   reduce ExpList --> Exp
    action 'TO' (noprec):   reduce ExpList --> Exp
    action 'IF' (noprec):   reduce ExpList --> Exp
    action 'FI' (noprec):   reduce ExpList --> Exp
    action 'DO' (noprec):   reduce ExpList --> Exp
    action 'OD' (noprec):   reduce ExpList --> Exp
    action 'BEGIN' (noprec):   reduce ExpList --> Exp
    action 'END' (noprec):   reduce ExpList --> Exp
    action 'RET' (noprec):   reduce ExpList --> Exp
    action 'LP' (noprec):   reduce ExpList --> Exp
    action 'LCP' (noprec):   reduce ExpList --> Exp
    action 'LSP' (noprec):   reduce ExpList --> Exp
    action 'RP' (noprec):   reduce ExpList --> Exp
    action 'RCP' (noprec):   reduce ExpList --> Exp
    action 'RSP' (noprec):   reduce ExpList --> Exp
    action 'ITYP' (noprec):   reduce ExpList --> Exp
    action 'BTYP' (noprec):   reduce ExpList --> Exp
    action 'FTYP' (noprec):   reduce ExpList --> Exp
    action 'NAME' (noprec):   reduce ExpList --> Exp
    action 'STRING' (noprec):   reduce ExpList --> Exp
    action 'BOOL' (noprec):   reduce ExpList --> Exp
    action 'INT' (noprec):   reduce ExpList --> Exp
    action 'error' (noprec):   reduce ExpList --> Exp
    action '#' (noprec):   reduce ExpList --> Exp
    action '$$' (noprec):   reduce ExpList --> Exp
  immediate action: <none>  gotos:state 118:  items:    Exp -> Exp 'TIMES' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 108
state 119:  items:    Exp -> Exp 'PLUS' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 109
state 120:  items:    Exp -> Exp 'MINUS' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 110
state 121:  items:    Exp -> Exp 'AND' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 111
state 122:  items:    Exp -> Exp 'EQ' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 112
state 123:  items:    Exp -> Exp 'LE' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 113
state 124:  items:    Exp -> Exp 'GT' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 114
state 125:  items:    Exp -> Exp 'LT' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 115
state 126:  items:    Exp -> Exp 'NEQ' . Exp
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 116
state 127:  items:    Exp -> 'NAME' 'LP' . ExpL 'RP'
  actions:    action 'HIGH' (noprec):   reduce ExpL --> 
    action 'EOF' (noprec):   reduce ExpL --> 
    action 'PRINT' (noprec):   reduce ExpL --> 
    action 'ASG' (noprec):   reduce ExpL --> 
    action 'SKIP' (noprec):   reduce ExpL --> 
    action 'ABORT' (noprec):   reduce ExpL --> 
    action 'FUNC' (noprec):   reduce ExpL --> 
    action 'PROC' (noprec):   reduce ExpL --> 
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   reduce ExpL --> 
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   reduce ExpL --> 
    action 'AND' (noprec):   reduce ExpL --> 
    action 'EQ' (noprec):   reduce ExpL --> 
    action 'LE' (noprec):   reduce ExpL --> 
    action 'LT' (noprec):   reduce ExpL --> 
    action 'GT' (noprec):   reduce ExpL --> 
    action 'NEQ' (noprec):   reduce ExpL --> 
    action 'COMMA' (noprec):   reduce ExpL --> 
    action 'COLON' (noprec):   reduce ExpL --> 
    action 'SEMI' (noprec):   reduce ExpL --> 
    action 'BAR' (noprec):   reduce ExpL --> 
    action 'TO' (noprec):   reduce ExpL --> 
    action 'IF' (noprec):   reduce ExpL --> 
    action 'FI' (noprec):   reduce ExpL --> 
    action 'DO' (noprec):   reduce ExpL --> 
    action 'OD' (noprec):   reduce ExpL --> 
    action 'BEGIN' (noprec):   reduce ExpL --> 
    action 'END' (noprec):   reduce ExpL --> 
    action 'RET' (noprec):   reduce ExpL --> 
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   reduce ExpL --> 
    action 'LSP' (noprec):   reduce ExpL --> 
    action 'RP' (noprec):   reduce ExpL --> 
    action 'RCP' (noprec):   reduce ExpL --> 
    action 'RSP' (noprec):   reduce ExpL --> 
    action 'ITYP' (noprec):   reduce ExpL --> 
    action 'BTYP' (noprec):   reduce ExpL --> 
    action 'FTYP' (noprec):   reduce ExpL --> 
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   reduce ExpL --> 
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   reduce ExpL --> 
    action '#' (noprec):   reduce ExpL --> 
    action '$$' (noprec):   reduce ExpL --> 
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 117
    goto ExpL: 128
    goto ExpList: 130
state 128:  items:    Exp -> 'NAME' 'LP' ExpL . 'RP'
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   error
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   shift 129
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   error
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 129:  items:    Exp -> 'NAME' 'LP' ExpL 'RP' . 
  actions:    action 'HIGH' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'EOF' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'PRINT' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'ASG' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'SKIP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'ABORT' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'FUNC' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'PROC' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'NEG' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'PLUS' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'MINUS' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'TIMES' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'AND' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'EQ' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'LE' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'LT' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'GT' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'NEQ' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'COMMA' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'COLON' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'SEMI' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'BAR' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'TO' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'IF' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'FI' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'DO' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'OD' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'BEGIN' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'END' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'RET' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'LP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'LCP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'LSP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'RP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'RCP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'RSP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'ITYP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'BTYP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'FTYP' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'NAME' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'STRING' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'BOOL' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'INT' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action 'error' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action '#' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
    action '$$' (noprec):   reduce Exp --> 'NAME' 'LP' ExpL 'RP'
  immediate action:   reduce Exp --> 'NAME' 'LP' ExpL 'RP'  gotos:state 130:  items:    ExpL -> ExpList . 
  actions:    action 'HIGH' (noprec):   reduce ExpL --> ExpList
    action 'EOF' (noprec):   reduce ExpL --> ExpList
    action 'PRINT' (noprec):   reduce ExpL --> ExpList
    action 'ASG' (noprec):   reduce ExpL --> ExpList
    action 'SKIP' (noprec):   reduce ExpL --> ExpList
    action 'ABORT' (noprec):   reduce ExpL --> ExpList
    action 'FUNC' (noprec):   reduce ExpL --> ExpList
    action 'PROC' (noprec):   reduce ExpL --> ExpList
    action 'NEG' (noprec):   reduce ExpL --> ExpList
    action 'PLUS' (noprec):   reduce ExpL --> ExpList
    action 'MINUS' (noprec):   reduce ExpL --> ExpList
    action 'TIMES' (noprec):   reduce ExpL --> ExpList
    action 'AND' (noprec):   reduce ExpL --> ExpList
    action 'EQ' (noprec):   reduce ExpL --> ExpList
    action 'LE' (noprec):   reduce ExpL --> ExpList
    action 'LT' (noprec):   reduce ExpL --> ExpList
    action 'GT' (noprec):   reduce ExpL --> ExpList
    action 'NEQ' (noprec):   reduce ExpL --> ExpList
    action 'COMMA' (noprec):   reduce ExpL --> ExpList
    action 'COLON' (noprec):   reduce ExpL --> ExpList
    action 'SEMI' (noprec):   reduce ExpL --> ExpList
    action 'BAR' (noprec):   reduce ExpL --> ExpList
    action 'TO' (noprec):   reduce ExpL --> ExpList
    action 'IF' (noprec):   reduce ExpL --> ExpList
    action 'FI' (noprec):   reduce ExpL --> ExpList
    action 'DO' (noprec):   reduce ExpL --> ExpList
    action 'OD' (noprec):   reduce ExpL --> ExpList
    action 'BEGIN' (noprec):   reduce ExpL --> ExpList
    action 'END' (noprec):   reduce ExpL --> ExpList
    action 'RET' (noprec):   reduce ExpL --> ExpList
    action 'LP' (noprec):   reduce ExpL --> ExpList
    action 'LCP' (noprec):   reduce ExpL --> ExpList
    action 'LSP' (noprec):   reduce ExpL --> ExpList
    action 'RP' (noprec):   reduce ExpL --> ExpList
    action 'RCP' (noprec):   reduce ExpL --> ExpList
    action 'RSP' (noprec):   reduce ExpL --> ExpList
    action 'ITYP' (noprec):   reduce ExpL --> ExpList
    action 'BTYP' (noprec):   reduce ExpL --> ExpList
    action 'FTYP' (noprec):   reduce ExpL --> ExpList
    action 'NAME' (noprec):   reduce ExpL --> ExpList
    action 'STRING' (noprec):   reduce ExpL --> ExpList
    action 'BOOL' (noprec):   reduce ExpL --> ExpList
    action 'INT' (noprec):   reduce ExpL --> ExpList
    action 'error' (noprec):   reduce ExpL --> ExpList
    action '#' (noprec):   reduce ExpL --> ExpList
    action '$$' (noprec):   reduce ExpL --> ExpList
  immediate action:   reduce ExpL --> ExpList  gotos:state 131:  items:    ExpList -> Exp 'COMMA' . ExpList
  actions:    action 'HIGH' (noprec):   error
    action 'EOF' (noprec):   error
    action 'PRINT' (noprec):   error
    action 'ASG' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'ABORT' (noprec):   error
    action 'FUNC' (noprec):   error
    action 'PROC' (noprec):   error
    action 'NEG' (explicit nonassoc 9997):   shift 106
    action 'PLUS' (noprec):   error
    action 'MINUS' (explicit left 9999):   shift 104
    action 'TIMES' (noprec):   error
    action 'AND' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LE' (noprec):   error
    action 'LT' (noprec):   error
    action 'GT' (noprec):   error
    action 'NEQ' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'BAR' (noprec):   error
    action 'TO' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'BEGIN' (noprec):   error
    action 'END' (noprec):   error
    action 'RET' (noprec):   error
    action 'LP' (noprec):   shift 101
    action 'LCP' (noprec):   error
    action 'LSP' (noprec):   error
    action 'RP' (noprec):   error
    action 'RCP' (noprec):   error
    action 'RSP' (noprec):   error
    action 'ITYP' (noprec):   error
    action 'BTYP' (noprec):   error
    action 'FTYP' (noprec):   error
    action 'NAME' (noprec):   shift 54
    action 'STRING' (noprec):   error
    action 'BOOL' (noprec):   shift 100
    action 'INT' (noprec):   shift 99
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Access: 98
    goto Exp: 117
    goto ExpList: 132
state 132:  items:    ExpList -> Exp 'COMMA' ExpList . 
  actions:    action 'HIGH' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'EOF' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'PRINT' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'ASG' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'SKIP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'ABORT' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'FUNC' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'PROC' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'NEG' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'PLUS' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'MINUS' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'TIMES' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'AND' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'EQ' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'LE' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'LT' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'GT' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'NEQ' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'COMMA' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'COLON' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'SEMI' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'BAR' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'TO' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'IF' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'FI' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'DO' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'OD' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'BEGIN' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'END' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'RET' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'LP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'LCP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'LSP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'RP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'RCP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'RSP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'ITYP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'BTYP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'FTYP' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'NAME' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'STRING' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'BOOL' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'INT' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action 'error' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action '#' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
    action '$$' (noprec):   reduce ExpList --> Exp 'COMMA' ExpList
  immediate action:   reduce ExpList --> Exp 'COMMA' ExpList  gotos:
startStates = 0;2
------------------------
